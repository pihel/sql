<?xml version="1.0" encoding="UTF-8" ?>
<displays>
<folder>
	<name><![CDATA[ash]]></name>
	<tooltip><![CDATA[ash]]></tooltip>
	<description><![CDATA[ ]]></description>
		<display id="74c746aa-0157-1000-8029-0a02322027a3" type="" style="Table" enable="true">
		<name><![CDATA[sql_id plans]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<TYPE><![CDATA[horizontal]]></TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[select :SQL_ID SQL_ID, PLAN_HASH_VALUE, min(begin_interval_time) as stdt, max(begin_interval_time) enddt, sum(EXECUTIONS_DELTA) as execs, 
round(avg(drid),2) drid, round(avg(buf_red),2) buf_red, round(avg(phys_gb),2) phys_gb, round(avg(rws),2) rws, 
round(avg(ELAPSED_TIME_DELTA),2) avg_ela_tm, round(max(ELAPSED_TIME_DELTA),2) max_ela_tm from (
  select s.snap_id, s.module, t.begin_interval_time, sql_id, PLAN_HASH_VALUE, nvl(nullif(EXECUTIONS_DELTA,0),1) EXECUTIONS_DELTA, round(DISK_READS_DELTA/nvl(nullif(EXECUTIONS_DELTA,0),1)) as drid, round(BUFFER_GETS_DELTA/nvl(nullif(EXECUTIONS_DELTA,0),1)) as buf_red, round(PHYSICAL_READ_BYTES_DELTA/nvl(nullif(EXECUTIONS_DELTA,0),1)/1024/1024/1024) as phys_gb, 
  --round(case when END_OF_FETCH_COUNT_TOTAL = 1 then ROWS_PROCESSED_DELTA/nvl(nullif(EXECUTIONS_DELTA,0) ,1) end) as rws,
  round(nullif( ROWS_PROCESSED_DELTA,0) /nvl(nullif(EXECUTIONS_DELTA,0) ,1)) as rws,
  round(s.ELAPSED_TIME_DELTA/nvl(nullif(EXECUTIONS_DELTA,0),1)/1000/1000,2) as ELAPSED_TIME_DELTA, nvl(nullif(EXECUTIONS_DELTA,0),1),OPTIMIZER_COST,IOWAIT_DELTA,
  round(IO_OFFLOAD_RETURN_BYTES_DELTA/1024/1024/1024,2) as off_gb  , round(IO_OFFLOAD_ELIG_BYTES_DELTA/1024/1024/1024,2) as eligb_gb
  from DBA_HIST_SQLSTAT s
  join DBA_HIST_SNAPSHOT t on t.snap_id = s.snap_id and t.INSTANCE_NUMBER = s.INSTANCE_NUMBER
  where 1=1
  and sql_id = :SQL_ID
)
group by PLAN_HASH_VALUE
order by enddt desc]]></sql>
			<binds>
				<bind id="SQL_ID">
					<prompt><![CDATA[SQL_ID]]></prompt>
					<tooltip><![CDATA[SQL_ID]]></tooltip>
					<value><![CDATA[fac35vc0q0jgx]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
			</binds>
		</query>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[plan]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * from table(DBMS_XPLAN.DISPLAY_AWR(:SQL_ID, :PLAN_HASH_VALUE, null, 'basic +outline +peeked_binds') )]]></sql>
				<binds>
					<bind id="SQL_ID">
						<prompt><![CDATA[SQL_ID]]></prompt>
						<tooltip><![CDATA[SQL_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="PLAN_HASH_VALUE">
						<prompt><![CDATA[PLAN_HASH_VALUE]]></prompt>
						<tooltip><![CDATA[PLAN_HASH_VALUE]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
	</display>
	<display id="74cae989-0157-1000-802d-0a02322027a3" type="" style="Table" enable="true">
		<name><![CDATA[query ash now]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<TYPE><![CDATA[horizontal]]></TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[select * from (
select  H.SESSION_ID, H.SESSION_SERIAL#, h.client_id, h.program, h.module, nvl(sql_exec_start,min(sample_time)) as sql_exec_start, h.sql_exec_id, h.sql_id, h.SQL_PLAN_HASH_VALUE, 
to_char(max(sample_time),'SSSSS') - to_char(sql_exec_start,'SSSSS')  as secs, 
count(*) cnt, round(SUM (delta_read_io_bytes)/1024/1024/1024,3) as gb, sum(h.delta_read_io_requests)/1000 as kreg,
max(s.SQL_TEXT) as sql_text
FROM   gv$active_session_history h
left join gv$sql s on s.sql_id = h.sql_id
where 1=1
and h.sql_id = NVL(:sql_id, h.sql_id)
and h.client_id = NVL(:client_id, h.client_id)
and h.session_id = NVL(:session_id, h.session_id)
and h.module = NVL(:module, h.module)
--and h.session_id=NVL(h.qc_session_id,h.session_id) --only main process on parallel
group by h.sql_id, h.SQL_PLAN_HASH_VALUE, h.sql_exec_start, h.module, h.client_id, h.program, h.sql_exec_id, H.SESSION_ID, H.SESSION_SERIAL#
)
where UPPER(sql_text) like UPPER(:txt)
order by sql_exec_start desc nulls last]]></sql>
			<binds>
				<bind id="sql_id">
					<prompt><![CDATA[sql_id]]></prompt>
					<tooltip><![CDATA[sql_id]]></tooltip>
					<value><![CDATA[8ugkkzqtyx6ax]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
				<bind id="client_id">
					<prompt><![CDATA[client_id]]></prompt>
					<tooltip><![CDATA[client_id]]></tooltip>
					<value><![CDATA[NULL_VALUE]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
				<bind id="session_id">
					<prompt><![CDATA[session_id]]></prompt>
					<tooltip><![CDATA[session_id]]></tooltip>
					<value><![CDATA[NULL_VALUE]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
				<bind id="module">
					<prompt><![CDATA[module]]></prompt>
					<tooltip><![CDATA[module]]></tooltip>
					<value><![CDATA[NULL_VALUE]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
				<bind id="txt">
					<prompt><![CDATA[txt]]></prompt>
					<tooltip><![CDATA[txt]]></tooltip>
					<value><![CDATA[%]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
			</binds>
		</query>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[plans]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select PLAN_HASH_VALUE, min(begin_interval_time) as stdt, max(begin_interval_time) enddt, sum(EXECUTIONS_DELTA) as execs, 
round(avg(drid),2) drid, round(avg(buf_red),2) buf_red, round(avg(phys_gb),2) phys_gb, round(avg(rws),2) rws, 
round(avg(ELAPSED_TIME_DELTA),2) avg_ela_tm, round(max(ELAPSED_TIME_DELTA),2) max_ela_tm from (
  select s.snap_id, s.module, t.begin_interval_time, sql_id, PLAN_HASH_VALUE, nvl(nullif(EXECUTIONS_DELTA,0),1) EXECUTIONS_DELTA, round(DISK_READS_DELTA/nvl(nullif(EXECUTIONS_DELTA,0),1)) as drid, round(BUFFER_GETS_DELTA/nvl(nullif(EXECUTIONS_DELTA,0),1)) as buf_red, round(PHYSICAL_READ_BYTES_DELTA/nvl(nullif(EXECUTIONS_DELTA,0),1)/1024/1024/1024) as phys_gb, 
  round(ROWS_PROCESSED_DELTA/nvl(nullif(EXECUTIONS_DELTA,0),1)) as rws, round(s.ELAPSED_TIME_DELTA/nvl(nullif(EXECUTIONS_DELTA,0),1)/1000/1000,2) as ELAPSED_TIME_DELTA, nvl(nullif(EXECUTIONS_DELTA,0),1),OPTIMIZER_COST,IOWAIT_DELTA,
  round(IO_OFFLOAD_RETURN_BYTES_DELTA/1024/1024/1024,2) as off_gb  , round(IO_OFFLOAD_ELIG_BYTES_DELTA/1024/1024/1024,2) as eligb_gb
  from DBA_HIST_SQLSTAT s
  join DBA_HIST_SNAPSHOT t on t.snap_id = s.snap_id and t.INSTANCE_NUMBER = s.INSTANCE_NUMBER
  where 1=1
  and sql_id = :SQL_ID
)
group by PLAN_HASH_VALUE
order by enddt desc]]></sql>
				<binds>
					<bind id="SQL_ID">
						<prompt><![CDATA[SQL_ID]]></prompt>
						<tooltip><![CDATA[SQL_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[plan]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT * FROM TABLE(dbms_xplan.display_cursor(:SQL_ID,format => 'ADVANCED'))]]></sql>
				<binds>
					<bind id="SQL_ID">
						<prompt><![CDATA[SQL_ID]]></prompt>
						<tooltip><![CDATA[SQL_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
	</display>
	<display id="74f7449d-0157-1000-8048-0a02322027a3" type="" style="Table" enable="true">
		<name><![CDATA[Query on obj]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<TYPE><![CDATA[horizontal]]></TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[with tx as (
  select /*+ MATERIALIZE */ p.sql_id, P.PLAN_HASH_VALUE
  from SYS.DBA_HIST_SQL_PLAN p
  where ( p.object_name = :obj)
  group by p.sql_id, p.PLAN_HASH_VALUE 
), 
tx2 as (
    select /*+ MATERIALIZE */  inst_id, sql_id, PLAN_HASH_VALUE from gv$sql_plan p where object_name = :obj
    group by inst_id, sql_id, PLAN_HASH_VALUE
)
select /*+ parallel(8) */  s.sql_id, s.PLAN_HASH_VALUE, 
sum( EXECUTIONS_DELTA ) EXECUTIONS_DELTA, 
round( SUM( s.ELAPSED_TIME_DELTA)/nvl(nullif(SUM( EXECUTIONS_DELTA),0),1) /1000/1000,3) as ELAPSED_TIME_DELTA,
round(nullif(sum(ROWS_PROCESSED_DELTA),0)/nvl(nullif(sum(EXECUTIONS_DELTA),0) ,1)) as rws,
round( SUM( DISK_READS_DELTA) /nvl(nullif( SUM( EXECUTIONS_DELTA ) ,0),1)) as drid,
round( SUM( BUFFER_GETS_DELTA) /nvl(nullif(SUM( EXECUTIONS_DELTA),0),1)) as buf_red,
SUM( DISK_READS_DELTA) as drid_ttl,
SUM( BUFFER_GETS_DELTA) as buf_red_ttl,
MAX(CAST(t.BEGIN_INTERVAL_TIME AS DATE)) as last_dt,
trim(max(DBMS_LOB.SUBSTR (ts.sql_text,1000))) as sql_text ,
'HIST' as from_un
from DBA_HIST_SQLSTAT s
join DBA_HIST_SNAPSHOT t on t.snap_id = s.snap_id and t.INSTANCE_NUMBER = s.INSTANCE_NUMBER
join tx on tx.sql_id = s.sql_id and tx.PLAN_HASH_VALUE = s.PLAN_HASH_VALUE
join dba_hist_sqltext ts on ts.sql_id = s.sql_id 
where t.BEGIN_INTERVAL_TIME between to_date(:f, 'dd.mm.yyyy hh24:mi:ss') and to_date(:t, 'dd.mm.yyyy hh24:mi:ss')
GROUP BY s.sql_id, s.PLAN_HASH_VALUE
    union all
select s.sql_id, s.PLAN_HASH_VALUE, 
sum( s.executions ) EXECUTIONS_DELTA, 
round( SUM( s.ELAPSED_TIME)/nvl(nullif(SUM( executions),0),1) /1000/1000,3) as ELAPSED_TIME_DELTA,
round(nullif(sum(ROWS_PROCESSED),0)/nvl(nullif(sum(executions),0) ,1)) as rws,
round( SUM( DISK_READS) /nvl(nullif( SUM( executions ) ,0),1)) as drid,
round( SUM( BUFFER_GETS) /nvl(nullif(SUM( executions),0),1)) as buf_red,
SUM( BUFFER_GETS) as drid_ttl,
SUM( BUFFER_GETS) as buf_red_ttl,
MAX(to_date(s.LAST_LOAD_TIME)) as last_dt,
max(s.sql_text)  sql_text,
'CACHE' as from_un
from gv$sql s
join tx2 on s.inst_id = tx2.inst_id and s.sql_id = tx2.sql_id and s.PLAN_HASH_VALUE = tx2.PLAN_HASH_VALUE
WHERE not exists(select 1 from tx where tx.sql_id = s.sql_id AND tx.PLAN_HASH_VALUE = s.PLAN_HASH_VALUE)
group by s.sql_id, s.PLAN_HASH_VALUE
order by EXECUTIONS_DELTA desc]]></sql>
			<binds>
				<bind id="obj">
					<prompt><![CDATA[obj]]></prompt>
					<tooltip><![CDATA[obj]]></tooltip>
					<value><![CDATA[J_3RFDI_ARC]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
				<bind id="f">
					<prompt><![CDATA[f]]></prompt>
					<tooltip><![CDATA[f]]></tooltip>
					<value><![CDATA[15.02.2024]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
				<bind id="t">
					<prompt><![CDATA[t]]></prompt>
					<tooltip><![CDATA[t]]></tooltip>
					<value><![CDATA[25.05.2024]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
			</binds>
		</query>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[plan]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * from table(DBMS_XPLAN.DISPLAY_AWR(:SQL_ID, :SQL_PLAN_HASH_VALUE, null, 'basic +outline +peeked_binds') )
union all
SELECT * FROM TABLE(dbms_xplan.display_cursor(:SQL_ID,format => 'ADVANCED'))]]></sql>
				<binds>
					<bind id="SQL_ID">
						<prompt><![CDATA[SQL_ID]]></prompt>
						<tooltip><![CDATA[SQL_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="SQL_PLAN_HASH_VALUE">
						<prompt><![CDATA[SQL_PLAN_HASH_VALUE]]></prompt>
						<tooltip><![CDATA[SQL_PLAN_HASH_VALUE]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
	</display>
	<display id="74fc2873-0157-1000-804a-0a02322027a3" type="" style="Table" enable="true">
		<name><![CDATA[Plan diff date]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<TYPE><![CDATA[horizontal]]></TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[with snp as (
    select /*+ materialize cardinality(1000) */ dbid , snap_id, instance_number, BEGIN_INTERVAL_TIME, END_INTERVAL_TIME
    from DBA_HIST_SNAPSHOT
     where (  begin_interval_time between to_date(:f, 'dd.mm.yyyy hh24') and to_date(:f, 'dd.mm.yyyy hh24')+1 or 
        begin_interval_time between to_date(:t, 'dd.mm.yyyy hh24') and to_date(:t, 'dd.mm.yyyy hh24')+1
      )
),
ash as (
    select dt, sql_id, SQL_PLAN_HASH_VALUE, round(AVG(secs),5) as secs, AVG(px) px, COUNT(DISTINCT sql_exec_id) as execs
    from (
        select trunc(snp.begin_interval_time) as dt, h.sql_exec_id, h.sql_id, h.SQL_PLAN_HASH_VALUE, GREATEST( to_char(max(sample_time),'SSSSS') - to_char(sql_exec_start,'SSSSS'), 0)  as secs, avg( trunc(px_flags/2097152) ) as px
        FROM snp
        join dba_hist_active_sess_history h on h.dbid = snp.dbid and h.snap_id = snp.snap_id and h.instance_number = snp.instance_number
        where h.PX_FLAGS > 2097152
        group by trunc(snp.begin_interval_time), h.sql_id, h.SQL_PLAN_HASH_VALUE, h.sql_exec_start, h.sql_exec_id, h.client_id
    )
    group by dt, sql_id, SQL_PLAN_HASH_VALUE
    having COUNT(DISTINCT sql_exec_id) > 0
), 
t as (
  select /*+ materialize */ trunc(snp.begin_interval_time) as dt, s.sql_id, s.PLAN_HASH_VALUE, 
  nvl(sum(a.execs), nullif( sum( s.EXECUTIONS_DELTA ),0)) as execs,   
  nvl(sum(a.secs), round( sum( s.ELAPSED_TIME_DELTA ) / nvl(nullif( sum( EXECUTIONS_DELTA ),0),1) /1000/1000,2)) as av_sec,
  nvl(AVG(a.px),1) as px
  from DBA_HIST_SQLSTAT s
  join snp on snp.snap_id = s.snap_id and snp.INSTANCE_NUMBER = s.INSTANCE_NUMBER and s.dbid = snp.dbid
  left join ash a on a.sql_id = s.sql_id AND a.SQL_PLAN_HASH_VALUE = s.PLAN_HASH_VALUE AND a.dt = trunc(snp.begin_interval_time)
  where s.parsing_schema_name NOT IN('DBSNMP', 'SYS', 'BRT$ADM', 'SYSTEM')
   AND EXECUTIONS_DELTA > 0
  group by trunc(snp.begin_interval_time), s.sql_id, s.PLAN_HASH_VALUE
)
select t.sql_id, t.PLAN_HASH_VALUE, t.execs, t.av_sec, t1.PLAN_HASH_VALUE as SQL_PLAN_HASH_VALUE_OLD, t1.execs as EXECS_OLD, 
t1.av_sec  av_sec_old, t.execs*t.av_sec - t.execs*nvl(t1.av_sec,0)  as diff, 
 round( (t.execs*t.av_sec - t.execs*nvl(t1.av_sec,0)) / SUM(t.execs*t.av_sec - t.execs*nvl(t1.av_sec,0))  OVER() * 100,2) as prc, 
 t.px,
 trim(DBMS_LOB.SUBSTR (tx.sql_text,2000)) as sql_text 
from t
join dba_hist_sqltext tx on tx.sql_id = t.sql_id 
left join t t1 on t1.dt = to_date(:f, 'dd.mm.yyyy hh24') and t.sql_id = t1.sql_id
where t.dt = to_date(:t, 'dd.mm.yyyy hh24')
and ( ( t.PLAN_HASH_VALUE <> nvl(t1.PLAN_HASH_VALUE,0) AND nvl(:CH,0) = 1 ) OR ( t.PLAN_HASH_VALUE <> t1.PLAN_HASH_VALUE AND nvl(:CH,0) = 0 ) )
and (t.execs*t.av_sec - t.execs*nvl(t1.av_sec,0)) != 0
order by diff  desc nulls last]]></sql>
			<binds>
				<bind id="f">
					<prompt><![CDATA[Раньше]]></prompt>
					<tooltip><![CDATA[f]]></tooltip>
					<value><![CDATA[05.07.2021]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
				<bind id="t">
					<prompt><![CDATA[Сейчас]]></prompt>
					<tooltip><![CDATA[t]]></tooltip>
					<value><![CDATA[12.07.2021]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
				<bind id="CH">
					<prompt><![CDATA[Включить новые]]></prompt>
					<tooltip><![CDATA[CH]]></tooltip>
					<value><![CDATA[0]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
			</binds>
		</query>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[new_plan]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * from table(DBMS_XPLAN.DISPLAY_AWR(:SQL_ID, :SQL_PLAN_HASH_VALUE, null, 'basic +outline +peeked_binds') )]]></sql>
				<binds>
					<bind id="SQL_ID">
						<prompt><![CDATA[SQL_ID]]></prompt>
						<tooltip><![CDATA[SQL_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="SQL_PLAN_HASH_VALUE">
						<prompt><![CDATA[SQL_PLAN_HASH_VALUE]]></prompt>
						<tooltip><![CDATA[SQL_PLAN_HASH_VALUE]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[old_plan]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * from table(DBMS_XPLAN.DISPLAY_AWR(:SQL_ID, :SQL_PLAN_HASH_VALUE_OLD, null, 'basic +outline +peeked_binds') )]]></sql>
				<binds>
					<bind id="SQL_ID">
						<prompt><![CDATA[SQL_ID]]></prompt>
						<tooltip><![CDATA[SQL_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="SQL_PLAN_HASH_VALUE_OLD">
						<prompt><![CDATA[SQL_PLAN_HASH_VALUE_OLD]]></prompt>
						<tooltip><![CDATA[SQL_PLAN_HASH_VALUE_OLD]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
	</display>
	<folder>
		<name><![CDATA[graph]]></name>
		<tooltip><![CDATA[graph]]></tooltip>
		<description><![CDATA[ ]]></description>
			<display id="74b7342e-0157-1000-8015-0a02322027a3" type="" style="Chart" enable="true">
			<name><![CDATA[Buffer Cache Hit Ratio]]></name>
			<description><![CDATA[Logical Reads Per Sec, Buffer Cache Hit Ratio, Physical Reads Per Sec]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<PLOT_HGRID_WIDTH><![CDATA[THINNER]]></PLOT_HGRID_WIDTH>
				<Y1AXIS_SCALE_MINIMUM><![CDATA[90.0]]></Y1AXIS_SCALE_MINIMUM>
				<XAXIS_TICK_LABEL_AUTO_ROTATE><![CDATA[true]]></XAXIS_TICK_LABEL_AUTO_ROTATE>
				<Y1AXIS_SCALE_INCREMENT><![CDATA[10.0]]></Y1AXIS_SCALE_INCREMENT>
				<Y2AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y2AXIS_SCALE_MAXIMUM>
				<Y1AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y1AXIS_LINE_WIDTH>
				<Y1AXIS_SCALE_MAXIMUM_AUTOMATIC><![CDATA[false]]></Y1AXIS_SCALE_MAXIMUM_AUTOMATIC>
				<Y1AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y1AXIS_TITLE_ALIGNMENT>
				<LEGEND_LOCATION><![CDATA[AUTOMATIC]]></LEGEND_LOCATION>
				<LEGEND_ALIGNMENT><![CDATA[LEFT]]></LEGEND_ALIGNMENT>
				<GRADIENT><![CDATA[false]]></GRADIENT>
				<XAXIS_LINE_WIDTH><![CDATA[THINNEST]]></XAXIS_LINE_WIDTH>
				<LEGEND><![CDATA[false]]></LEGEND>
				<Y1AXIS_SCALE_MAXIMUM><![CDATA[100.0]]></Y1AXIS_SCALE_MAXIMUM>
				<XAXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></XAXIS_TITLE_ALIGNMENT>
				<PLOT_DATALABELS><![CDATA[false]]></PLOT_DATALABELS>
				<XAXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></XAXIS_TICK_LABEL_ROTATE>
				<Y1AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y1AXIS_LOGARITHMIC_BASE>
				<TYPE><![CDATA[LINE_VERT_ABS]]></TYPE>
				<GRID_WIDTH><![CDATA[THINNER]]></GRID_WIDTH>
				<PLOT_DATALABELS_BAR_POSITION><![CDATA[ABOVE]]></PLOT_DATALABELS_BAR_POSITION>
				<FOOTNOTE_ALIGNMENT><![CDATA[LEFT]]></FOOTNOTE_ALIGNMENT>
				<XAXIS_TICK_LABEL_SKIP_MODE><![CDATA[AUTOMATIC]]></XAXIS_TICK_LABEL_SKIP_MODE>
				<Y2AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y2AXIS_LOGARITHMIC_BASE>
				<GRID><![CDATA[true]]></GRID>
				<STYLE><![CDATA[Default]]></STYLE>
				<TITLE_ALIGNMENT><![CDATA[LEFT]]></TITLE_ALIGNMENT>
				<Y1AXIS_SCALE_MINIMUM_AUTOMATIC><![CDATA[false]]></Y1AXIS_SCALE_MINIMUM_AUTOMATIC>
				<Y2AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y2AXIS_TICK_LABEL_ROTATE>
				<Y2AXIS_SCALE_MINIMUM><![CDATA[10.0]]></Y2AXIS_SCALE_MINIMUM>
				<THREED><![CDATA[false]]></THREED>
				<Y2AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y2AXIS_LINE_WIDTH>
				<Y1AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y1AXIS_TICK_LABEL_ROTATE>
				<Y1AXIS_TITLE><![CDATA[false]]></Y1AXIS_TITLE>
				<Y2AXIS_SCALE_INCREMENT><![CDATA[20.0]]></Y2AXIS_SCALE_INCREMENT>
				<PLOT_VGRID_WIDTH><![CDATA[THINNER]]></PLOT_VGRID_WIDTH>
				<Y2AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y2AXIS_TITLE_ALIGNMENT>
				<SUBTITLE_ALIGNMENT><![CDATA[LEFT]]></SUBTITLE_ALIGNMENT>
			</CustomValues>
			<query>
				<sql><![CDATA[select to_char(s.begin_time, 'dd-mm hh24') as hh, null as col1 , avg(s.average) as y 
from DBA_HIST_SYSMETRIC_SUMMARY  s
where s.begin_time between to_date(:f, 'dd.mm.yyyy hh24:mi:ss') and to_date(:t, 'dd.mm.yyyy hh24:mi:ss')
and metric_name = :m
and to_number(to_char(s.begin_time, 'hh24')) between :hf AND :ht
group by to_char(s.begin_time, 'dd-mm hh24'), to_char(s.begin_time, 'hh24'), trunc(s.begin_time)
order by trunc(s.begin_time), to_char(s.begin_time, 'hh24') asc]]></sql>
				<binds>
					<bind id="f">
						<prompt><![CDATA[С]]></prompt>
						<tooltip><![CDATA[f]]></tooltip>
						<value><![CDATA[17.07.2023]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="t">
						<prompt><![CDATA[По]]></prompt>
						<tooltip><![CDATA[t]]></tooltip>
						<value><![CDATA[08.08.2023]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="m">
						<prompt><![CDATA[Метрика]]></prompt>
						<tooltip><![CDATA[m]]></tooltip>
						<value><![CDATA[Buffer Cache Hit Ratio]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="hf">
						<prompt><![CDATA[hf]]></prompt>
						<tooltip><![CDATA[hf]]></tooltip>
						<value><![CDATA[0]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="ht">
						<prompt><![CDATA[ht]]></prompt>
						<tooltip><![CDATA[ht]]></tooltip>
						<value><![CDATA[24]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="7509f473-0157-1000-8053-0a02322027a3" type="" style="Chart" enable="true">
			<name><![CDATA[Reads Per Sec]]></name>
			<description><![CDATA[Logical Reads Per Sec, Buffer Cache Hit Ratio, Physical Reads Per Sec]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<PLOT_HGRID_WIDTH><![CDATA[THINNER]]></PLOT_HGRID_WIDTH>
				<XAXIS_TICK_LABEL_AUTO_ROTATE><![CDATA[true]]></XAXIS_TICK_LABEL_AUTO_ROTATE>
				<Y1AXIS_SCALE_INCREMENT><![CDATA[10.0]]></Y1AXIS_SCALE_INCREMENT>
				<Y2AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y2AXIS_SCALE_MAXIMUM>
				<Y1AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y1AXIS_LINE_WIDTH>
				<Y1AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y1AXIS_TITLE_ALIGNMENT>
				<LEGEND_LOCATION><![CDATA[AUTOMATIC]]></LEGEND_LOCATION>
				<LEGEND_ALIGNMENT><![CDATA[LEFT]]></LEGEND_ALIGNMENT>
				<GRADIENT><![CDATA[false]]></GRADIENT>
				<XAXIS_LINE_WIDTH><![CDATA[THINNEST]]></XAXIS_LINE_WIDTH>
				<LEGEND><![CDATA[false]]></LEGEND>
				<Y1AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y1AXIS_SCALE_MAXIMUM>
				<XAXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></XAXIS_TITLE_ALIGNMENT>
				<XAXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></XAXIS_TICK_LABEL_ROTATE>
				<Y1AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y1AXIS_LOGARITHMIC_BASE>
				<TYPE><![CDATA[LINE_VERT_ABS]]></TYPE>
				<GRID_WIDTH><![CDATA[THINNER]]></GRID_WIDTH>
				<PLOT_DATALABELS_BAR_POSITION><![CDATA[ABOVE]]></PLOT_DATALABELS_BAR_POSITION>
				<FOOTNOTE_ALIGNMENT><![CDATA[LEFT]]></FOOTNOTE_ALIGNMENT>
				<XAXIS_TICK_LABEL_SKIP_MODE><![CDATA[AUTOMATIC]]></XAXIS_TICK_LABEL_SKIP_MODE>
				<Y2AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y2AXIS_LOGARITHMIC_BASE>
				<GRID><![CDATA[true]]></GRID>
				<STYLE><![CDATA[Default]]></STYLE>
				<TITLE_ALIGNMENT><![CDATA[LEFT]]></TITLE_ALIGNMENT>
				<Y2AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y2AXIS_TICK_LABEL_ROTATE>
				<Y2AXIS_SCALE_MINIMUM><![CDATA[10.0]]></Y2AXIS_SCALE_MINIMUM>
				<THREED><![CDATA[false]]></THREED>
				<Y2AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y2AXIS_LINE_WIDTH>
				<Y1AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y1AXIS_TICK_LABEL_ROTATE>
				<Y2AXIS_SCALE_INCREMENT><![CDATA[20.0]]></Y2AXIS_SCALE_INCREMENT>
				<PLOT_VGRID_WIDTH><![CDATA[THINNER]]></PLOT_VGRID_WIDTH>
				<Y2AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y2AXIS_TITLE_ALIGNMENT>
				<SUBTITLE_ALIGNMENT><![CDATA[LEFT]]></SUBTITLE_ALIGNMENT>
			</CustomValues>
			<query>
				<sql><![CDATA[select to_char(s.begin_time, 'dd-mm hh24') as hh, null as col1 , avg(s.average) as y 
from DBA_HIST_SYSMETRIC_SUMMARY  s
where s.begin_time between to_date(:f, 'dd.mm.yyyy hh24:mi:ss') and to_date(:t, 'dd.mm.yyyy hh24:mi:ss')
and metric_name = ( CASE WHEN :m = 1 THEN 'Logical Reads Per Sec' ELSE 'Physical Reads Per Sec' END )
group by to_char(s.begin_time, 'dd-mm hh24'), to_char(s.begin_time, 'hh24'), trunc(s.begin_time)
order by trunc(s.begin_time), to_char(s.begin_time, 'hh24') asc]]></sql>
				<binds>
					<bind id="f">
						<prompt><![CDATA[С]]></prompt>
						<tooltip><![CDATA[f]]></tooltip>
						<value><![CDATA[25.05.2020]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="t">
						<prompt><![CDATA[По]]></prompt>
						<tooltip><![CDATA[t]]></tooltip>
						<value><![CDATA[25.05.2021]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="m">
						<prompt><![CDATA[logical=1,phys=2 reads]]></prompt>
						<tooltip><![CDATA[1=Logical Reads Per Sec, 2 = Physical Reads Per Sec]]></tooltip>
						<value><![CDATA[2]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="74ccb560-0157-1000-802f-0a02322027a3" type="" style="Chart" enable="true">
			<name><![CDATA[Нагрузка ash]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<PLOT_HGRID_WIDTH><![CDATA[THINNER]]></PLOT_HGRID_WIDTH>
				<PLOT_DATATIPS_TEXT><![CDATA[true]]></PLOT_DATATIPS_TEXT>
				<XAXIS_TICK_LABEL_AUTO_ROTATE><![CDATA[true]]></XAXIS_TICK_LABEL_AUTO_ROTATE>
				<Y1AXIS_SCALE_INCREMENT><![CDATA[10.0]]></Y1AXIS_SCALE_INCREMENT>
				<Y2AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y2AXIS_SCALE_MAXIMUM>
				<Y1AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y1AXIS_LINE_WIDTH>
				<Y1AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y1AXIS_TITLE_ALIGNMENT>
				<LEGEND_LOCATION><![CDATA[AUTOMATIC]]></LEGEND_LOCATION>
				<PLOT_DATALABELS_NUMBER_FORMATS.CURRENCY_SYMBOL><![CDATA[DOLLARS]]></PLOT_DATALABELS_NUMBER_FORMATS.CURRENCY_SYMBOL>
				<LEGEND_ALIGNMENT><![CDATA[LEFT]]></LEGEND_ALIGNMENT>
				<GRADIENT><![CDATA[false]]></GRADIENT>
				<XAXIS_LINE_WIDTH><![CDATA[THINNEST]]></XAXIS_LINE_WIDTH>
				<LEGEND><![CDATA[false]]></LEGEND>
				<PLOT_DATALABELS_NUMBER_FORMATS.SCALE_FACTOR><![CDATA[NONE]]></PLOT_DATALABELS_NUMBER_FORMATS.SCALE_FACTOR>
				<Y1AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y1AXIS_SCALE_MAXIMUM>
				<XAXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></XAXIS_TITLE_ALIGNMENT>
				<PLOT_DATALABELS><![CDATA[true]]></PLOT_DATALABELS>
				<XAXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></XAXIS_TICK_LABEL_ROTATE>
				<Y1AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y1AXIS_LOGARITHMIC_BASE>
				<TYPE><![CDATA[LINE_VERT_ABS]]></TYPE>
				<GRID_WIDTH><![CDATA[THINNER]]></GRID_WIDTH>
				<PLOT_DATALABELS_BAR_POSITION><![CDATA[ABOVE]]></PLOT_DATALABELS_BAR_POSITION>
				<FOOTNOTE_ALIGNMENT><![CDATA[LEFT]]></FOOTNOTE_ALIGNMENT>
				<XAXIS_TICK_LABEL_SKIP_MODE><![CDATA[AUTOMATIC]]></XAXIS_TICK_LABEL_SKIP_MODE>
				<PLOT_DATALABELS_NUMBER_FORMATS.NEGATIVE_NUMBER_FORMAT><![CDATA[BRACKETED]]></PLOT_DATALABELS_NUMBER_FORMATS.NEGATIVE_NUMBER_FORMAT>
				<Y2AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y2AXIS_LOGARITHMIC_BASE>
				<GRID><![CDATA[true]]></GRID>
				<STYLE><![CDATA[Default]]></STYLE>
				<TITLE_ALIGNMENT><![CDATA[LEFT]]></TITLE_ALIGNMENT>
				<PLOT_DATALABELS_NUMBER_FORMATS.DECIMAL_PLACES><![CDATA[0]]></PLOT_DATALABELS_NUMBER_FORMATS.DECIMAL_PLACES>
				<Y2AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y2AXIS_TICK_LABEL_ROTATE>
				<Y2AXIS_SCALE_MINIMUM><![CDATA[10.0]]></Y2AXIS_SCALE_MINIMUM>
				<PLOT_HGRID><![CDATA[true]]></PLOT_HGRID>
				<THREED><![CDATA[false]]></THREED>
				<Y2AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y2AXIS_LINE_WIDTH>
				<Y1AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y1AXIS_TICK_LABEL_ROTATE>
				<PLOT_DATALABELS_NUMBER_FORMATS.TYPE><![CDATA[NUMBER]]></PLOT_DATALABELS_NUMBER_FORMATS.TYPE>
				<Y2AXIS_SCALE_INCREMENT><![CDATA[20.0]]></Y2AXIS_SCALE_INCREMENT>
				<PLOT_VGRID_WIDTH><![CDATA[THINNER]]></PLOT_VGRID_WIDTH>
				<PLOT_SERIES_OPTIONS_MARKER_SHAPE><![CDATA[\,SQUARE,SQUARE,SQUARE,AUTOMATIC,AUTOMATIC]]></PLOT_SERIES_OPTIONS_MARKER_SHAPE>
				<Y2AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y2AXIS_TITLE_ALIGNMENT>
				<SUBTITLE_ALIGNMENT><![CDATA[LEFT]]></SUBTITLE_ALIGNMENT>
			</CustomValues>
			<query>
				<sql><![CDATA[select to_char(sample_time, 'dd-mm hh24') as hh, null as col1, count(*) as cnt
  from dba_hist_active_sess_history h
  where 
    h.sample_time >= trunc(sysdate-10)
    and h.sample_time < trunc(sysdate, 'hh')
  group by trunc(sample_time), to_char(sample_time, 'hh24') , to_char(sample_time, 'dd-mm hh24')
  order by trunc(sample_time) asc, to_char(sample_time, 'hh24') asc]]></sql>
			</query>
		</display>
		<display id="74e08e2c-0157-1000-803d-0a02322027a3" type="" style="Chart" enable="true">
			<name><![CDATA[Нагрузка по неделям]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<PLOT_HGRID_WIDTH><![CDATA[THINNER]]></PLOT_HGRID_WIDTH>
				<XAXIS_TICK_LABEL_AUTO_ROTATE><![CDATA[true]]></XAXIS_TICK_LABEL_AUTO_ROTATE>
				<Y1AXIS_SCALE_INCREMENT><![CDATA[10.0]]></Y1AXIS_SCALE_INCREMENT>
				<Y2AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y2AXIS_SCALE_MAXIMUM>
				<Y1AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y1AXIS_LINE_WIDTH>
				<Y1AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y1AXIS_TITLE_ALIGNMENT>
				<LEGEND_LOCATION><![CDATA[AUTOMATIC]]></LEGEND_LOCATION>
				<LEGEND_ALIGNMENT><![CDATA[LEFT]]></LEGEND_ALIGNMENT>
				<GRADIENT><![CDATA[false]]></GRADIENT>
				<XAXIS_LINE_WIDTH><![CDATA[THINNEST]]></XAXIS_LINE_WIDTH>
				<LEGEND><![CDATA[true]]></LEGEND>
				<DATA_MAP_COLUMNS><![CDATA[\,"DT"]]></DATA_MAP_COLUMNS>
				<Y1AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y1AXIS_SCALE_MAXIMUM>
				<XAXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></XAXIS_TITLE_ALIGNMENT>
				<PLOT_DATALABELS><![CDATA[false]]></PLOT_DATALABELS>
				<XAXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></XAXIS_TICK_LABEL_ROTATE>
				<Y1AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y1AXIS_LOGARITHMIC_BASE>
				<TYPE><![CDATA[BAR_VERT_CLUST]]></TYPE>
				<GRID_WIDTH><![CDATA[THINNER]]></GRID_WIDTH>
				<PLOT_DATALABELS_BAR_POSITION><![CDATA[CENTERED]]></PLOT_DATALABELS_BAR_POSITION>
				<FOOTNOTE_ALIGNMENT><![CDATA[LEFT]]></FOOTNOTE_ALIGNMENT>
				<XAXIS_TICK_LABEL_SKIP_MODE><![CDATA[AUTOMATIC]]></XAXIS_TICK_LABEL_SKIP_MODE>
				<DATA_MAP_COLNAMES><![CDATA[\,"DT","SMPL","WW"]]></DATA_MAP_COLNAMES>
				<DATA_MAP_SERIES><![CDATA[\,"WW"]]></DATA_MAP_SERIES>
				<Y2AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y2AXIS_LOGARITHMIC_BASE>
				<GRID><![CDATA[true]]></GRID>
				<DATA_MAP_COUNT><![CDATA[1]]></DATA_MAP_COUNT>
				<STYLE><![CDATA[Default]]></STYLE>
				<TITLE_ALIGNMENT><![CDATA[LEFT]]></TITLE_ALIGNMENT>
				<Y2AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y2AXIS_TICK_LABEL_ROTATE>
				<Y2AXIS_SCALE_MINIMUM><![CDATA[10.0]]></Y2AXIS_SCALE_MINIMUM>
				<THREED><![CDATA[false]]></THREED>
				<Y2AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y2AXIS_LINE_WIDTH>
				<DATA_MAP_VALUES><![CDATA[\,"SMPL"]]></DATA_MAP_VALUES>
				<Y1AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y1AXIS_TICK_LABEL_ROTATE>
				<Y2AXIS_SCALE_INCREMENT><![CDATA[20.0]]></Y2AXIS_SCALE_INCREMENT>
				<PLOT_VGRID_WIDTH><![CDATA[THINNER]]></PLOT_VGRID_WIDTH>
				<Y2AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y2AXIS_TITLE_ALIGNMENT>
				<SUBTITLE_ALIGNMENT><![CDATA[LEFT]]></SUBTITLE_ALIGNMENT>
			</CustomValues>
			<query>
				<sql><![CDATA[select /*+ parallel(8) */ dt, ww, case when nvl(:avg,0) = 1 then avg(smpl) else sum(smpl) end smpl from (
  select  to_char(h.sample_time,'IW') as ww, to_char(h.sample_time, 'D')||'_'||to_char(h.sample_time, 'DAY') as dt, count(*) smpl 
  from dba_hist_active_sess_history h
  where 
    h.sample_time >= trunc(sysdate-60, 'IW')
    AND h.sample_time > trunc(sysdate, 'yyyy')
    AND to_number(to_char(h.sample_time, 'hh24')) between NVL(:ST_HOUR,0) AND NVL(:ED_HOUR,25)
  group by to_char(h.sample_time, 'D')||'_'||to_char(h.sample_time, 'DAY'), to_char(h.sample_time,'IW'), to_char(h.sample_time,'hh24mi')
)
group by ww, dt
order by dt, ww]]></sql>
				<binds>
					<bind id="avg">
						<prompt><![CDATA[среднее=1, общая=0]]></prompt>
						<tooltip><![CDATA[avg]]></tooltip>
						<value><![CDATA[1]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="ST_HOUR">
						<prompt><![CDATA[ST_HOUR]]></prompt>
						<tooltip><![CDATA[ST_HOUR]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="ED_HOUR">
						<prompt><![CDATA[ED_HOUR]]></prompt>
						<tooltip><![CDATA[ED_HOUR]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="74d76741-0157-1000-8039-0a02322027a3" type="" style="Chart" enable="true">
			<name><![CDATA[Таблицы в кэше]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<PLOT_HGRID_WIDTH><![CDATA[THINNER]]></PLOT_HGRID_WIDTH>
				<XAXIS_TICK_LABEL_AUTO_ROTATE><![CDATA[true]]></XAXIS_TICK_LABEL_AUTO_ROTATE>
				<Y1AXIS_SCALE_INCREMENT><![CDATA[10.0]]></Y1AXIS_SCALE_INCREMENT>
				<Y2AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y2AXIS_SCALE_MAXIMUM>
				<Y1AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y1AXIS_LINE_WIDTH>
				<Y1AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y1AXIS_TITLE_ALIGNMENT>
				<LEGEND_LOCATION><![CDATA[AUTOMATIC]]></LEGEND_LOCATION>
				<Y1AXIS_REFOBJ_COUNT><![CDATA[0]]></Y1AXIS_REFOBJ_COUNT>
				<LEGEND_ALIGNMENT><![CDATA[LEFT]]></LEGEND_ALIGNMENT>
				<GRADIENT><![CDATA[false]]></GRADIENT>
				<XAXIS_LINE_WIDTH><![CDATA[THINNEST]]></XAXIS_LINE_WIDTH>
				<Y1AXIS_REFOBJ_LINE_VALUE><![CDATA[\]]></Y1AXIS_REFOBJ_LINE_VALUE>
				<LEGEND><![CDATA[true]]></LEGEND>
				<Y1AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y1AXIS_SCALE_MAXIMUM>
				<XAXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></XAXIS_TITLE_ALIGNMENT>
				<PLOT_DATALABELS><![CDATA[false]]></PLOT_DATALABELS>
				<XAXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></XAXIS_LOGARITHMIC_BASE>
				<XAXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></XAXIS_TICK_LABEL_ROTATE>
				<Y1AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y1AXIS_LOGARITHMIC_BASE>
				<TYPE><![CDATA[LINE_VERT_ABS]]></TYPE>
				<GRID_WIDTH><![CDATA[THINNER]]></GRID_WIDTH>
				<PLOT_DATALABELS_BAR_POSITION><![CDATA[ABOVE]]></PLOT_DATALABELS_BAR_POSITION>
				<FOOTNOTE_ALIGNMENT><![CDATA[LEFT]]></FOOTNOTE_ALIGNMENT>
				<XAXIS_TICK_LABEL_SKIP_MODE><![CDATA[AUTOMATIC]]></XAXIS_TICK_LABEL_SKIP_MODE>
				<Y1AXIS_REFOBJ_VISIBLE><![CDATA[\]]></Y1AXIS_REFOBJ_VISIBLE>
				<Y2AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y2AXIS_LOGARITHMIC_BASE>
				<GRID><![CDATA[true]]></GRID>
				<STYLE><![CDATA[Default]]></STYLE>
				<TITLE_ALIGNMENT><![CDATA[LEFT]]></TITLE_ALIGNMENT>
				<XAXIS_SCALE_INCREMENT><![CDATA[10.0]]></XAXIS_SCALE_INCREMENT>
				<XAXIS_SCALE_MAXIMUM><![CDATA[70.0]]></XAXIS_SCALE_MAXIMUM>
				<Y2AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y2AXIS_TICK_LABEL_ROTATE>
				<Y2AXIS_SCALE_MINIMUM><![CDATA[10.0]]></Y2AXIS_SCALE_MINIMUM>
				<THREED><![CDATA[false]]></THREED>
				<Y2AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y2AXIS_LINE_WIDTH>
				<Y1AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y1AXIS_TICK_LABEL_ROTATE>
				<Y1AXIS_REFOBJ_TEXT><![CDATA[\]]></Y1AXIS_REFOBJ_TEXT>
				<Y1AXIS_REFOBJ_WIDTH><![CDATA[\]]></Y1AXIS_REFOBJ_WIDTH>
				<Y1AXIS_TITLE><![CDATA[false]]></Y1AXIS_TITLE>
				<Y2AXIS_SCALE_INCREMENT><![CDATA[20.0]]></Y2AXIS_SCALE_INCREMENT>
				<PLOT_VGRID_WIDTH><![CDATA[THINNER]]></PLOT_VGRID_WIDTH>
				<Y2AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y2AXIS_TITLE_ALIGNMENT>
				<SUBTITLE_ALIGNMENT><![CDATA[LEFT]]></SUBTITLE_ALIGNMENT>
				<Y1AXIS_REFOBJ_COLOR><![CDATA[\]]></Y1AXIS_REFOBJ_COLOR>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT to_char("STAT$BH".SNAP_DATE, 'dd-mm hh24') as hh, "STAT$BH".OBJ_NAME, avg("STAT$BH".PCT) as pct
FROM DBSNMP."STAT$BH" "STAT$BH"
WHERE ("STAT$BH".PCT>=:prc) and snap_date >= trunc(SYSDATE-:d)
group by to_char("STAT$BH".SNAP_DATE, 'dd-mm hh24'), "STAT$BH".OBJ_NAME, trunc("STAT$BH".SNAP_DATE), to_char("STAT$BH".SNAP_DATE, 'hh24')
ORDER BY trunc("STAT$BH".SNAP_DATE), to_char("STAT$BH".SNAP_DATE, 'hh24') asc, "STAT$BH".OBJ_NAME asc]]></sql>
				<binds>
					<bind id="prc">
						<prompt><![CDATA[%]]></prompt>
						<tooltip><![CDATA[prc]]></tooltip>
						<value><![CDATA[10]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="d">
						<prompt><![CDATA[Дней]]></prompt>
						<tooltip><![CDATA[d]]></tooltip>
						<value><![CDATA[2]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="75bb8f50-0157-1000-8070-0a02322027a3" type="" style="Chart" enable="true">
			<name><![CDATA[Table top reads]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<PLOT_HGRID_WIDTH><![CDATA[THINNER]]></PLOT_HGRID_WIDTH>
				<XAXIS_TICK_LABEL_AUTO_ROTATE><![CDATA[true]]></XAXIS_TICK_LABEL_AUTO_ROTATE>
				<Y1AXIS_SCALE_INCREMENT><![CDATA[10.0]]></Y1AXIS_SCALE_INCREMENT>
				<Y2AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y2AXIS_SCALE_MAXIMUM>
				<Y1AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y1AXIS_LINE_WIDTH>
				<Y1AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y1AXIS_TITLE_ALIGNMENT>
				<LEGEND_LOCATION><![CDATA[AUTOMATIC]]></LEGEND_LOCATION>
				<LEGEND_ALIGNMENT><![CDATA[LEFT]]></LEGEND_ALIGNMENT>
				<GRADIENT><![CDATA[false]]></GRADIENT>
				<XAXIS_LINE_WIDTH><![CDATA[THINNEST]]></XAXIS_LINE_WIDTH>
				<LEGEND><![CDATA[false]]></LEGEND>
				<Y1AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y1AXIS_SCALE_MAXIMUM>
				<XAXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></XAXIS_TITLE_ALIGNMENT>
				<XAXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></XAXIS_TICK_LABEL_ROTATE>
				<Y1AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y1AXIS_LOGARITHMIC_BASE>
				<TYPE><![CDATA[BAR_HORIZ_CLUST]]></TYPE>
				<GRID_WIDTH><![CDATA[THINNER]]></GRID_WIDTH>
				<PLOT_DATALABELS_BAR_POSITION><![CDATA[ABOVE]]></PLOT_DATALABELS_BAR_POSITION>
				<FOOTNOTE_ALIGNMENT><![CDATA[LEFT]]></FOOTNOTE_ALIGNMENT>
				<XAXIS_TICK_LABEL_SKIP_MODE><![CDATA[AUTOMATIC]]></XAXIS_TICK_LABEL_SKIP_MODE>
				<Y2AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y2AXIS_LOGARITHMIC_BASE>
				<GRID><![CDATA[true]]></GRID>
				<STYLE><![CDATA[Default]]></STYLE>
				<TITLE_ALIGNMENT><![CDATA[LEFT]]></TITLE_ALIGNMENT>
				<Y2AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y2AXIS_TICK_LABEL_ROTATE>
				<Y2AXIS_SCALE_MINIMUM><![CDATA[10.0]]></Y2AXIS_SCALE_MINIMUM>
				<THREED><![CDATA[false]]></THREED>
				<Y2AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y2AXIS_LINE_WIDTH>
				<Y1AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y1AXIS_TICK_LABEL_ROTATE>
				<Y2AXIS_SCALE_INCREMENT><![CDATA[20.0]]></Y2AXIS_SCALE_INCREMENT>
				<PLOT_VGRID_WIDTH><![CDATA[THINNER]]></PLOT_VGRID_WIDTH>
				<Y2AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y2AXIS_TITLE_ALIGNMENT>
				<SUBTITLE_ALIGNMENT><![CDATA[LEFT]]></SUBTITLE_ALIGNMENT>
			</CustomValues>
			<query>
				<sql><![CDATA[select object_name, null col1, rds
from (
  select object_name || ' - ' || round( rds / sum(rds) OVER() * 100 ,2) || '%' object_name,  rds 
  from (
    select o.object_name, case when NVL(:lg,1) = 1 then SUM(LOGICAL_READS_DELTA)  else SUM(PHYSICAL_READS_DELTA) end as rds
    from DBA_HIST_SEG_STAT s
    join SYS.dba_objects o on o.object_id = s.obj#
    join DBA_HIST_SNAPSHOT n on n.snap_id = s.snap_id
    where n.BEGIN_INTERVAL_TIME BETWEEN to_date(:s, 'dd.mm.yyyy hh24:mi:ss') and to_date(:e, 'dd.mm.yyyy hh24:mi:ss')
    group by o.object_name
  )
  order by rds desc nulls last
)
where rownum <= :tp]]></sql>
				<binds>
					<bind id="lg">
						<prompt><![CDATA[logical=1,phys=2 reads]]></prompt>
						<tooltip><![CDATA[lg]]></tooltip>
						<value><![CDATA[1]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="s">
						<prompt><![CDATA[старт]]></prompt>
						<tooltip><![CDATA[s]]></tooltip>
						<value><![CDATA[25.05.2020]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="e">
						<prompt><![CDATA[конец]]></prompt>
						<tooltip><![CDATA[e]]></tooltip>
						<value><![CDATA[25.05.2021]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="tp">
						<prompt><![CDATA[top]]></prompt>
						<tooltip><![CDATA[tp]]></tooltip>
						<value><![CDATA[15]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
		<display id="02efe697-0159-1000-8001-0a023220a012" type="" style="Chart" enable="true">
			<name><![CDATA[Graph Top]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<PLOT_HGRID_WIDTH><![CDATA[THINNER]]></PLOT_HGRID_WIDTH>
				<PLOT_DATATIPS_CUMULATIVE_VALUE><![CDATA[false]]></PLOT_DATATIPS_CUMULATIVE_VALUE>
				<Y1AXIS_SCALE_INCREMENT><![CDATA[10.0]]></Y1AXIS_SCALE_INCREMENT>
				<Y2AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y2AXIS_SCALE_MAXIMUM>
				<Y1AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y1AXIS_LINE_WIDTH>
				<Y1AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y1AXIS_TITLE_ALIGNMENT>
				<LEGEND_LOCATION><![CDATA[AUTOMATIC]]></LEGEND_LOCATION>
				<LEGEND_ALIGNMENT><![CDATA[LEFT]]></LEGEND_ALIGNMENT>
				<GRADIENT><![CDATA[false]]></GRADIENT>
				<XAXIS_LINE_WIDTH><![CDATA[THINNEST]]></XAXIS_LINE_WIDTH>
				<LEGEND><![CDATA[true]]></LEGEND>
				<DATA_MAP_COLUMNS><![CDATA[\,"DT"]]></DATA_MAP_COLUMNS>
				<Y1AXIS_SCALE_MAXIMUM><![CDATA[60.0]]></Y1AXIS_SCALE_MAXIMUM>
				<XAXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></XAXIS_TITLE_ALIGNMENT>
				<PLOT_DATALABELS><![CDATA[false]]></PLOT_DATALABELS>
				<XAXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></XAXIS_TICK_LABEL_ROTATE>
				<Y1AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y1AXIS_LOGARITHMIC_BASE>
				<TYPE><![CDATA[LINE_VERT_ABS]]></TYPE>
				<GRID_WIDTH><![CDATA[THINNER]]></GRID_WIDTH>
				<PLOT_DATALABELS_BAR_POSITION><![CDATA[ABOVE]]></PLOT_DATALABELS_BAR_POSITION>
				<FOOTNOTE_ALIGNMENT><![CDATA[LEFT]]></FOOTNOTE_ALIGNMENT>
				<XAXIS_TICK_LABEL_SKIP_MODE><![CDATA[AUTOMATIC]]></XAXIS_TICK_LABEL_SKIP_MODE>
				<DATA_MAP_COLNAMES><![CDATA[\,"DT","ELAPSED_TIME_DELTA","SQL_ID"]]></DATA_MAP_COLNAMES>
				<DATA_MAP_SERIES><![CDATA[\,"SQL_ID"]]></DATA_MAP_SERIES>
				<Y2AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y2AXIS_LOGARITHMIC_BASE>
				<DATA_MAP_COUNT><![CDATA[1]]></DATA_MAP_COUNT>
				<STYLE><![CDATA[Default]]></STYLE>
				<TITLE_ALIGNMENT><![CDATA[LEFT]]></TITLE_ALIGNMENT>
				<Y2AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y2AXIS_TICK_LABEL_ROTATE>
				<Y2AXIS_SCALE_MINIMUM><![CDATA[10.0]]></Y2AXIS_SCALE_MINIMUM>
				<PLOT_DATATIPS_VALUE><![CDATA[true]]></PLOT_DATATIPS_VALUE>
				<Y2AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y2AXIS_LINE_WIDTH>
				<DATA_MAP_VALUES><![CDATA[\,"ELAPSED_TIME_DELTA"]]></DATA_MAP_VALUES>
				<Y1AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y1AXIS_TICK_LABEL_ROTATE>
				<Y2AXIS_SCALE_INCREMENT><![CDATA[20.0]]></Y2AXIS_SCALE_INCREMENT>
				<PLOT_VGRID_WIDTH><![CDATA[THINNER]]></PLOT_VGRID_WIDTH>
				<Y2AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y2AXIS_TITLE_ALIGNMENT>
				<SUBTITLE_ALIGNMENT><![CDATA[LEFT]]></SUBTITLE_ALIGNMENT>
			</CustomValues>
			<query>
				<sql><![CDATA[with top as (
  SELECT /*+ MATERIALIZE */ sql_id FROM (
    select s.sql_id,  ROW_NUMBER() OVER(order by SUM(s.ELAPSED_TIME_DELTA) desc nulls last) as  rn
    from DBA_HIST_SQLSTAT s
    join DBA_HIST_SNAPSHOT t on t.snap_id = s.snap_id and t.INSTANCE_NUMBER = s.INSTANCE_NUMBER
    where t.BEGIN_INTERVAL_TIME between to_date(:f, 'dd.mm.yyyy hh24:mi:ss') and to_date(:t, 'dd.mm.yyyy hh24:mi:ss')
    GROUP BY s.sql_id
  ) WHERE rn <= :TOP
)
select t.sql_id, to_char(d.dt, 'dd.mm.yyy hh24') as dt, t.ELAPSED_TIME_DELTA, 
  to_date(:f, 'dd.mm.yyyy hh24:mi:ss') as f, to_date(:t, 'dd.mm.yyyy hh24:mi:ss') as t,  :TOP as TOP
from  (select TRUNC( to_date(:f, 'dd.mm.yyyy hh24:mi:ss') + ( level - 1 ) /24, 'hh') as dt 
from dual connect by to_date(:f, 'dd.mm.yyyy hh24:mi:ss') + ( level - 1 ) /24 <= LEAST(to_date(:t, 'dd.mm.yyyy hh24:mi:ss'), SYSDATE) ) d
left join (
  select s.sql_id, trunc(t.BEGIN_INTERVAL_TIME, 'hh') as dttm, SUM(s.ELAPSED_TIME_DELTA) as  ELAPSED_TIME_DELTA
  from top t
  join DBA_HIST_SQLSTAT s on s.sql_id = t.sql_id
  join DBA_HIST_SNAPSHOT t on t.snap_id = s.snap_id and t.INSTANCE_NUMBER = s.INSTANCE_NUMBER
  where 
  t.BEGIN_INTERVAL_TIME between to_date(:f, 'dd.mm.yyyy hh24:mi:ss') and to_date(:t, 'dd.mm.yyyy hh24:mi:ss')
  GROUP BY s.sql_id, trunc(t.BEGIN_INTERVAL_TIME, 'hh')
) t ON d.dt = t.dttm
order by d.dt]]></sql>
				<binds>
					<bind id="f">
						<prompt><![CDATA[f]]></prompt>
						<tooltip><![CDATA[f]]></tooltip>
						<value><![CDATA[25.05.2020]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="t">
						<prompt><![CDATA[t]]></prompt>
						<tooltip><![CDATA[t]]></tooltip>
						<value><![CDATA[25.05.2021]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="TOP">
						<prompt><![CDATA[TOP]]></prompt>
						<tooltip><![CDATA[TOP]]></tooltip>
						<value><![CDATA[10]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
	</folder>
	<display id="4e375f87-0158-1000-8007-0a0232200bb2" type="" style="Table" enable="true">
		<name><![CDATA[sql top reads]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<TYPE><![CDATA[horizontal]]></TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[select v.SQL_ID, v.PLAN_HASH_VALUE, MAX( v.module ) module,  min(begin_interval_time) as stdt, max(begin_interval_time) enddt, sum(EXECUTIONS_DELTA) as execs, 
round(avg(drid),2) drid, round(avg(buf_red),2) buf_red, 
round(avg(drid_ttl),2) drid_ttl, round(avg(buf_red_ttl),2) buf_red_ttl, 
round(avg(phys_gb),2) phys_gb, round(avg(rws),2) rws, 
round(avg(ELAPSED_TIME_DELTA),2) avg_ela_tm, round(max(ELAPSED_TIME_DELTA),2) max_ela_tm ,
trim(max( DBMS_LOB.SUBSTR (t.sql_text,1000) )) as txt 
from (
  select s.snap_id, s.module, t.begin_interval_time, sql_id, PLAN_HASH_VALUE, nvl(nullif(EXECUTIONS_DELTA,0),1) EXECUTIONS_DELTA, 
  round(DISK_READS_DELTA/nvl(nullif(EXECUTIONS_DELTA,0),1)) as drid, round(BUFFER_GETS_DELTA/nvl(nullif(EXECUTIONS_DELTA,0),1)) as buf_red, 
  round(DISK_READS_DELTA) as drid_ttl, round(BUFFER_GETS_DELTA) as buf_red_ttl, 
  round(PHYSICAL_READ_BYTES_DELTA/nvl(nullif(EXECUTIONS_DELTA,0),1)/1024/1024/1024) as phys_gb, 
  --round(case when END_OF_FETCH_COUNT_TOTAL = 1 then ROWS_PROCESSED_DELTA/nvl(nullif(EXECUTIONS_DELTA,0) ,1) end) as rws,
  round(nullif( ROWS_PROCESSED_DELTA,0) /nvl(nullif(EXECUTIONS_DELTA,0) ,1)) as rws,
  round(s.ELAPSED_TIME_DELTA/nvl(nullif(EXECUTIONS_DELTA,0),1)/1000/1000,2) as ELAPSED_TIME_DELTA, nvl(nullif(EXECUTIONS_DELTA,0),1),OPTIMIZER_COST,IOWAIT_DELTA,
  round(IO_OFFLOAD_RETURN_BYTES_DELTA/1024/1024/1024,2) as off_gb  , round(IO_OFFLOAD_ELIG_BYTES_DELTA/1024/1024/1024,2) as eligb_gb
  from DBA_HIST_SQLSTAT s
  join DBA_HIST_SNAPSHOT t on t.snap_id = s.snap_id and t.INSTANCE_NUMBER = s.INSTANCE_NUMBER
  where 1=1
  and t.begin_interval_time BETWEEN to_date(:f, 'dd.mm.yyyy hh24:mi:ss') and to_date(:t, 'dd.mm.yyyy hh24:mi:ss')
) v
left join dba_hist_sqltext t on t.sql_id = v.sql_id
group by v.SQL_ID, v.PLAN_HASH_VALUE
order by drid desc nulls last]]></sql>
			<binds>
				<bind id="f">
					<prompt><![CDATA[С]]></prompt>
					<tooltip><![CDATA[f]]></tooltip>
					<value><![CDATA[11.03.2020]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
				<bind id="t">
					<prompt><![CDATA[По]]></prompt>
					<tooltip><![CDATA[t]]></tooltip>
					<value><![CDATA[11.03.2020 00:15]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
			</binds>
		</query>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[plan]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * from table(DBMS_XPLAN.DISPLAY_AWR(:SQL_ID, :PLAN_HASH_VALUE, null, 'basic +outline +peeked_binds') )]]></sql>
				<binds>
					<bind id="SQL_ID">
						<prompt><![CDATA[SQL_ID]]></prompt>
						<tooltip><![CDATA[SQL_ID]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
					<bind id="PLAN_HASH_VALUE">
						<prompt><![CDATA[PLAN_HASH_VALUE]]></prompt>
						<tooltip><![CDATA[PLAN_HASH_VALUE]]></tooltip>
						<value><![CDATA[NULL_VALUE]]></value>
						<bracket><![CDATA[null]]></bracket>
					</bind>
				</binds>
			</query>
		</display>
	</display>
	<display id="02f9310d-0159-1000-8009-0a023220a012" type="" style="Table" enable="true">
		<name><![CDATA[ash]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<TYPE><![CDATA[horizontal]]></TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[with snp as (
    select /*+ materialize cardinality(1000) */ dbid , snap_id, instance_number, BEGIN_INTERVAL_TIME, END_INTERVAL_TIME
    from DBA_HIST_SNAPSHOT
    where END_INTERVAL_TIME >= to_date(:f, 'dd.mm.yyyy hh24:mi:ss') and BEGIN_INTERVAL_TIME <= to_date(:t, 'dd.mm.yyyy hh24:mi:ss')
)
, ash as (
  --число сэмплов, px и client_id берем из ash
  select /*+ materialize */ module, sql_id, st_dt, ed_dt, PLAN_HASH_VALUE, execs, gb, av_sec, secs, rws, smpl, px, client_id, smpl_full
  from 
  (
    select  max(module) as module, sql_id, min(msmpl_tm) as st_dt, max(msmpl_tm) ed_dt, 
          SQL_PLAN_HASH_VALUE as PLAN_HASH_VALUE, sum(execs) execs, sum(gb) as gb, round(avg(secs),2) as av_sec, round(sum(secs),2) secs, null rws,
          sum(smpl) smpl, avg(px) as px, max(client_id) as client_id, sum(sum(smpl)) OVER() smpl_full
    from
    (
      select /*+ cardinality(@"SEL$A33D5808" "ASH"@"SEL$20" 100000) */ h.sql_exec_start, h.module, h.sql_id, h.SQL_PLAN_HASH_VALUE, count(distinct sql_exec_id) as execs,  SUM (delta_read_io_bytes)/1024/1024/1024 as gb, 
      GREATEST( (cast(max(sample_time) as date)- sql_exec_start )*3600*24, 0)  as secs, count(*) as smpl, max(h.sample_time) as msmpl_tm, 
      avg( trunc(px_flags/2097152) ) as px, client_id
      FROM snp
      join dba_hist_active_sess_history h on h.dbid = snp.dbid and h.snap_id = snp.snap_id and h.instance_number = snp.instance_number
      where 
      h.sample_time between to_date(:f, 'dd.mm.yyyy hh24:mi:ss') and to_date(:t, 'dd.mm.yyyy hh24:mi:ss')
      --and h.sql_id is not null
      and ( h.module like :m or :m is null )
      and ( h.client_id like :c or :c is null )
      and ( h.sql_id = :sql_id or :sql_id is null )
      and ( h.SQL_PLAN_HASH_VALUE = :hsh or :hsh is null )
      and to_number(to_char(h.sample_time, 'hh24')) between NVL(:st_hr,0) and NVL(:ed_hr,24)
      and ( NVL(h.EVENT,'CPU') = :event or :event is null )
      and (h.session_id = :sid or :sid is null)
      and ( h.user_id = :user_id or :user_id is null )
      and ( h.CURRENT_OBJ# = :obj or :obj is null )
      group by h.sql_id, h.SQL_PLAN_HASH_VALUE, h.module, h.sql_exec_start, h.sql_exec_id, h.client_id
      UNION ALL
      select h.sql_exec_start, h.module, h.sql_id, h.SQL_PLAN_HASH_VALUE, count(distinct sql_exec_id) as execs,  SUM (delta_read_io_bytes)/1024/1024/1024 as gb, 
      GREATEST( to_char(max(sample_time),'SSSSS') - to_char(sql_exec_start,'SSSSS'), 0)  as secs, trunc(count(*)/5) as smpl, max(h.sample_time) as msmpl_tm, 
      avg( trunc(px_flags/2097152) ) as px, client_id
      FROM gv$active_session_history h
      where 
      h.sample_time between to_date(:f, 'dd.mm.yyyy hh24:mi:ss') and to_date(:t, 'dd.mm.yyyy hh24:mi:ss')
      --and h.sql_id is not null
      and ( h.module = :m or :m is null )
      and ( h.client_id = :c or :c is null )
      and ( h.sql_id = :sql_id or :sql_id is null )
      and ( h.SQL_PLAN_HASH_VALUE = :hsh or :hsh is null )
      and to_number(to_char(h.sample_time, 'hh24')) between NVL(:st_hr,0) and NVL(:ed_hr,24)
      and ( NVL(h.EVENT,'CPU') = :event or :event is null )
      and (h.session_id = :sid or :sid is null)
      and ( h.user_id = :user_id or :user_id is null )
      and ( h.CURRENT_OBJ# = :obj or :obj is null )
      AND  h.sample_time >= trunc(sysdate,'hh')
      group by h.sql_id, h.SQL_PLAN_HASH_VALUE, h.module, h.sql_exec_start, h.sql_exec_id, h.client_id
    ) vvv
    group by sql_id, SQL_PLAN_HASH_VALUE
    order by smpl desc nulls last
  )
  where rownum <= 50
),
awr as (
  --все остальное по возможности из awr
  SELECT /*+ MATERIALIZE */ * FROM (
    select max(max(s.module)) OVER(PARTITION BY sql_id, PLAN_HASH_VALUE order by count(*) desc) module, sql_id, min(t.begin_interval_time) st_dt, max(t.END_INTERVAL_TIME) ed_dt,
        PLAN_HASH_VALUE, SUM(EXECUTIONS_DELTA) execs, 
      round(SUM(BUFFER_GETS_DELTA)/nvl(nullif(SUM(EXECUTIONS_DELTA),0),1)) as gb, 
      round(SUM(s.ELAPSED_TIME_DELTA)/nvl(nullif(SUM(EXECUTIONS_DELTA),0),1)/1000/1000,4) as av_sec, 
      round(SUM(s.ELAPSED_TIME_DELTA)/1000/1000,4) as secs, 
      round(nullif(SUM(ROWS_PROCESSED_DELTA),0)/nvl(nullif(SUM(EXECUTIONS_DELTA),0) ,1)) as rws ,
      null as smpl, null px, null client_id, null smpl_full
      from snp t
      join DBA_HIST_SQLSTAT s on t.dbid = s.dbid and t.snap_id = s.snap_id and t.INSTANCE_NUMBER = s.INSTANCE_NUMBER
      where ( s.sql_id = :sql_id or :sql_id is null )
      and ( s.module = :m or :m is null )
      and ( NULL IS NOT NULL or :c is null ) --нет клиента, если задан, то тащим все из ash
      and ( NULL IS NOT NULL or :sid is null ) --аналогично sid
      and ( NULL IS NOT NULL or :user_id is null ) --аналогично user
      and ( NULL IS NOT NULL or :obj is null ) --аналогично obj
      and ( s.PLAN_HASH_VALUE = :hsh or :hsh is null )
      and to_number(to_char(t.begin_interval_time, 'hh24')) between NVL(:st_hr,0) and NVL(:ed_hr,24)
      and ( NULL IS NOT NULL or :event is null ) --нет event, если задан, то тащим все из ash
    GROUP BY sql_id, PLAN_HASH_VALUE
    ORDER BY secs desc nulls last
  )
  WHERE rownum <= 50
)
select /*+ parallel(4) monitor */ distinct v.module, v.client_id, v.sql_id, v.PLAN_HASH_VALUE, st_dt,ed_dt, execs, round(gb,2) as gb, round(av_sec,2) as av_sec, secs, 
smpl, nvl( round(px), 0) as dop, rws, round(smpl / nullif(smpl_full,0) *100, 2) as prc,
trim( NVL( trim(DBMS_LOB.SUBSTR (t.sql_text,1000)), t1.SQL_TEXT) ) as txt 
from 
(
  select module, sql_id, PLAN_HASH_VALUE, st_dt,ed_dt, execs, gb, av_sec, secs, smpl, px, client_id, rws, smpl_full
  from (
  SELECT
    NVL(awr.module , ash.module) as module, 
    NVL(awr.sql_id , ash.sql_id) as sql_id,
    cast(LEAST(NVL(awr.st_dt,ash.st_dt) , NVL(ash.st_dt,awr.st_dt)) as date) as st_dt,
    cast(GREATEST(NVL(awr.ed_dt,ash.ed_dt) , NVL(ash.ed_dt,awr.ed_dt)) as date) as ed_dt,
    NVL(awr.PLAN_HASH_VALUE , ash.PLAN_HASH_VALUE) as PLAN_HASH_VALUE,
    NVL(awr.execs , ash.execs) as execs,
    NVL(awr.gb , ash.gb) as gb,
    case when NVL(ash.px,0) > 1 then ash.av_sec else NVL(awr.av_sec,ash.av_sec) end as av_sec, --у параллельных запросов в awr общее время
    case when NVL(ash.px,0) > 1 then ash.secs else NVL(awr.secs,ash.secs) end as secs,
    NVL(awr.rws , ash.rws) as rws,
    NVL(awr.smpl , ash.smpl) as smpl,
    NVL(awr.smpl_full , ash.smpl_full) smpl_full,
    NVL(awr.px , ash.px) as px,
    NVL(awr.client_id , ash.client_id) as client_id
  FROM  ash FULL OUTER JOIN awr ON (ash.sql_id = awr.sql_id AND ash.PLAN_HASH_VALUE = awr.PLAN_HASH_VALUE)
  --where NVL(awr.execs , ash.execs) < 10--?
  order by case when nvl(:smpl,1)=1 then smpl else secs end desc nulls last
  )
  where rownum <= 30
) v
left join dba_hist_sqltext t on t.sql_id = v.sql_id
left join v$sql t1 on t1.sql_id = v.sql_id
order by case when nvl(:smpl,1)=1 then smpl else secs end desc nulls last]]></sql>
			<binds>
				<bind id="f">
					<prompt><![CDATA[f]]></prompt>
					<tooltip><![CDATA[f]]></tooltip>
					<value><![CDATA[15.07.2024 04]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
				<bind id="t">
					<prompt><![CDATA[t]]></prompt>
					<tooltip><![CDATA[t]]></tooltip>
					<value><![CDATA[15.07.2024 06:12]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
				<bind id="m">
					<prompt><![CDATA[module]]></prompt>
					<tooltip><![CDATA[m]]></tooltip>
					<value><![CDATA[NULL_VALUE]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
				<bind id="c">
					<prompt><![CDATA[client]]></prompt>
					<tooltip><![CDATA[c]]></tooltip>
					<value><![CDATA[ALEREMOTE]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
				<bind id="sql_id">
					<prompt><![CDATA[sql_id]]></prompt>
					<tooltip><![CDATA[sql_id]]></tooltip>
					<value><![CDATA[NULL_VALUE]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
				<bind id="hsh">
					<prompt><![CDATA[hsh]]></prompt>
					<tooltip><![CDATA[hsh]]></tooltip>
					<value><![CDATA[NULL_VALUE]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
				<bind id="st_hr">
					<prompt><![CDATA[st_hr]]></prompt>
					<tooltip><![CDATA[st_hr]]></tooltip>
					<value><![CDATA[NULL_VALUE]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
				<bind id="ed_hr">
					<prompt><![CDATA[ed_hr]]></prompt>
					<tooltip><![CDATA[ed_hr]]></tooltip>
					<value><![CDATA[NULL_VALUE]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
				<bind id="event">
					<prompt><![CDATA[event]]></prompt>
					<tooltip><![CDATA[event]]></tooltip>
					<value><![CDATA[NULL_VALUE]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
				<bind id="sid">
					<prompt><![CDATA[sid]]></prompt>
					<tooltip><![CDATA[sid]]></tooltip>
					<value><![CDATA[NULL_VALUE]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
				<bind id="user_id">
					<prompt><![CDATA[user_id]]></prompt>
					<tooltip><![CDATA[user_id]]></tooltip>
					<value><![CDATA[NULL_VALUE]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
				<bind id="obj">
					<prompt><![CDATA[obj]]></prompt>
					<tooltip><![CDATA[obj]]></tooltip>
					<value><![CDATA[NULL_VALUE]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
				<bind id="smpl">
					<prompt><![CDATA[smpl]]></prompt>
					<tooltip><![CDATA[smpl]]></tooltip>
					<value><![CDATA[0]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
			</binds>
		</query>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[sql_id plans]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select PLAN_HASH_VALUE, min(begin_interval_time) as stdt, max(begin_interval_time) enddt, sum(EXECUTIONS_DELTA) as execs, 
round(avg(drid),2) drid, round(avg(buf_red),2) buf_red, round(avg(phys_gb),2) phys_gb, round(avg(rws),2) rws, 
round(avg(ELAPSED_TIME_DELTA),6) avg_ela_tm, round(max(ELAPSED_TIME_DELTA),2) max_ela_tm, round(stddev(ELAPSED_TIME_DELTA),2) deviation
from (
  select s.snap_id, s.module, t.begin_interval_time, sql_id, PLAN_HASH_VALUE, nvl(nullif(EXECUTIONS_DELTA,0),1) EXECUTIONS_DELTA, round(DISK_READS_DELTA/nvl(nullif(EXECUTIONS_DELTA,0),1)) as drid, round(BUFFER_GETS_DELTA/nvl(nullif(EXECUTIONS_DELTA,0),1)) as buf_red, round(PHYSICAL_READ_BYTES_DELTA/nvl(nullif(EXECUTIONS_DELTA,0),1)/1024/1024/1024) as phys_gb, 
  --round(case when END_OF_FETCH_COUNT_TOTAL = 1 then ROWS_PROCESSED_DELTA/nvl(nullif(EXECUTIONS_DELTA,0) ,1) end) as rws, 
  round(nullif(ROWS_PROCESSED_DELTA,0)/nvl(nullif(EXECUTIONS_DELTA,0) ,1)) as rws,
  round(s.ELAPSED_TIME_DELTA/nvl(nullif(EXECUTIONS_DELTA,0),1)/1000/1000,2) as ELAPSED_TIME_DELTA, nvl(nullif(EXECUTIONS_DELTA,0),1),OPTIMIZER_COST,IOWAIT_DELTA,
  round(IO_OFFLOAD_RETURN_BYTES_DELTA/1024/1024/1024,2) as off_gb  , round(IO_OFFLOAD_ELIG_BYTES_DELTA/1024/1024/1024,2) as eligb_gb
  from DBA_HIST_SQLSTAT s
  join DBA_HIST_SNAPSHOT t on t.dbid = s.dbid and t.snap_id = s.snap_id and t.INSTANCE_NUMBER = s.INSTANCE_NUMBER
  where t.begin_interval_time > sysdate-365 AND EXECUTIONS_DELTA > 0
  and sql_id = :SQL_ID
)
group by PLAN_HASH_VALUE
order by enddt desc]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[ash now]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select  H.SESSION_ID, H.SESSION_SERIAL#,h.client_id, h.module, sql_exec_start, h.sql_id, h.SQL_PLAN_HASH_VALUE, 
to_char(max(sample_time),'SSSSS') - to_char(sql_exec_start,'SSSSS')  as secs,
count(*) cnt, SUM (delta_read_io_bytes)/1024/1024/1024 as gb, sum(h.delta_read_io_requests)/1000 as kreg
FROM   gv$active_session_history h
where 1=1
and h.sql_id = :SQL_ID /*AND ( h.SQL_PLAN_HASH_VALUE = :SQL_PLAN_HASH_VALUE OR NVL(:SQL_PLAN_HASH_VALUE,0) = 0 )*/
--and h.session_id=NVL(h.qc_session_id,h.session_id) --only main process on parallel
group by h.sql_id, h.SQL_PLAN_HASH_VALUE, sql_exec_start, module, h.client_id, H.SESSION_ID, H.SESSION_SERIAL#
order by sql_exec_start desc nulls last]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[plan]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * from table(DBMS_XPLAN.DISPLAY_AWR(:SQL_ID, :PLAN_HASH_VALUE, null, 'basic +outline +peeked_binds +note') )]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[binds]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select last_captured, DATATYPE_STRING, NAME, VALUE_STRING from dba_hist_sqlbind where sql_id = :SQL_ID 
and last_captured <= sysdate
order by snap_id desc, position asc]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[v$sql]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select PLAN_HASH_VALUE, CHILD_NUMBER, SQL_PROFILE, SQL_PLAN_BASELINE, executions, round( ELAPSED_TIME/NVL(NULLIF(executions,0),1) / 1000 /1000 ,6) as sec_per_exec,
fetches,
round( DISK_READS/NVL(NULLIF(executions,0),1) ,4) as DISK_READS, round( BUFFER_GETS/NVL(NULLIF(executions,0),1) ,4) as BUFFER_GETS, 
round( CPU_TIME/NVL(NULLIF(executions,0),1) / 1000 / 1000 ,6) CPU_TIME, round( ROWS_PROCESSED/NVL(NULLIF(executions,0),1)  ,4) ROWS_PROCESSED, 
FIRST_LOAD_TIME, LAST_LOAD_TIME 
from gv$sql where sql_id = :SQL_ID]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[awr]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select s.INSTANCE_NUMBER, s.snap_id, s.module, t.begin_interval_time, sql_id, PLAN_HASH_VALUE, nvl(nullif(EXECUTIONS_DELTA,0),1) EXECUTIONS, 
  round(DISK_READS_DELTA/nvl(nullif(EXECUTIONS_DELTA,0),1)) as drid, 
  round(BUFFER_GETS_DELTA/nvl(nullif(EXECUTIONS_DELTA,0),1)) as buf_red, 
  round(BUFFER_GETS_DELTA/nvl(nullif(ROWS_PROCESSED_DELTA,0),1), 4) as buf_red_per_row, 
  round(s.IOWAIT_DELTA/nvl(nullif(EXECUTIONS_DELTA,0),1)/1000/1000,6) IOWAIT,
  round(s.CPU_TIME_DELTA/nvl(nullif(EXECUTIONS_DELTA,0),1)/1000/1000,6) CPU_TIME,
  round(PHYSICAL_READ_BYTES_DELTA/nvl(nullif(EXECUTIONS_DELTA,0),1)/1024/1024/1024) as phys_gb, 
  round(nullif(ROWS_PROCESSED_DELTA,0)/nvl(nullif(EXECUTIONS_DELTA,0) ,1)) as rws,
  round(s.ELAPSED_TIME_DELTA/nvl(nullif(EXECUTIONS_DELTA,0),1)/1000/1000,6) as ELAPSED_TIME, 
  round(s.ELAPSED_TIME_DELTA/nvl(nullif(ROWS_PROCESSED_DELTA,0),1)/1000/1000,6) as ELAPSED_TIME_PERROW, 
  OPTIMIZER_COST,
  round(IO_OFFLOAD_RETURN_BYTES_DELTA/nvl(nullif(EXECUTIONS_DELTA,0) ,1)/1024/1024,2) as off_mb  , 
  round(IO_OFFLOAD_ELIG_BYTES_DELTA/nvl(nullif(EXECUTIONS_DELTA,0) ,1)/1024/1024,2) as eligb_mb
  from DBA_HIST_SQLSTAT s
  join DBA_HIST_SNAPSHOT t on t.snap_id = s.snap_id and t.INSTANCE_NUMBER = s.INSTANCE_NUMBER
  where 1=1
  and sql_id = :SQL_ID
order by t.begin_interval_time desc, s.snap_id desc, s.INSTANCE_NUMBER]]></sql>
			</query>
		</display>
		<display id="" type="" style="Code" enable="true">
			<name><![CDATA[text]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
			</CustomValues>
			<query>
				<sql><![CDATA[select sql_text from dba_hist_sqltext t
where sql_id = :SQL_ID and rownum < 2]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[plan real]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[with t as (
  select /*+ materialize */ SQL_PLAN_LINE_ID, LISTAGG(event || ' ('||prc||'%)', '; ') WITHIN GROUP (ORDER BY prc desc) event, SUM(prc) as prc
  from (
    select nvl( SQL_PLAN_LINE_ID, 0) SQL_PLAN_LINE_ID, NVL(h.event, h.SESSION_STATE) event, round( (RATIO_TO_REPORT(count(*)) OVER () *100 ), 2) as prc,
      round( (RATIO_TO_REPORT(count(*)) OVER (partition by nvl( SQL_PLAN_LINE_ID, 0)) *100 ), 2) as prc_per_line
    FROM   dba_hist_active_sess_history h
    where 
    h.sample_time between :ST_DT and :ED_DT
    and h.sql_id = :SQL_ID AND h.SQL_PLAN_HASH_VALUE = :PLAN_HASH_VALUE
    group by nvl( SQL_PLAN_LINE_ID, 0), NVL(h.event, h.SESSION_STATE)
  )
  where prc_per_line > 1
  GROUP BY SQL_PLAN_LINE_ID
)
select DISTINCT p.id, RPAD(' ', p."DEPTH", ' ') || P.OPERATION || ' ' || p.OPTIONS  as OPERATION, p.object_name, p.search_columns,
 v.access_predicates, v.filter_predicates,
 case when p.search_columns > 0 THEN ( select LISTAGG(i.COLUMN_NAME, ', ') WITHIN GROUP (ORDER BY i.COLUMN_POSITION) cols
  from SYS.DBA_IND_COLUMNS i WHERE i.INDEX_NAME = p.object_name AND i.INDEX_OWNER = p.OBJECT_OWNER AND p.search_columns >0 ) END as index_columns,
  t.event, t.prc
from SYS.DBA_HIST_SQL_PLAN p
left join v$sql_plan v on v.sql_id = p.sql_id and v.PLAN_HASH_VALUE = p.PLAN_HASH_VALUE and v.id = p.id
left join t on T.SQL_PLAN_LINE_ID = p.id 
where p.sql_id = :SQL_ID AND p.PLAN_HASH_VALUE = :PLAN_HASH_VALUE
order by p.id]]></sql>
			</query>
		</display>
		<display id="" type="" style="Chart" enable="true">
			<name><![CDATA[graph]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<PLOT_HGRID_WIDTH><![CDATA[THINNER]]></PLOT_HGRID_WIDTH>
				<Y1AXIS_SCALE_INCREMENT><![CDATA[10.0]]></Y1AXIS_SCALE_INCREMENT>
				<Y2AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y2AXIS_SCALE_MAXIMUM>
				<Y1AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y1AXIS_LINE_WIDTH>
				<Y1AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y1AXIS_TITLE_ALIGNMENT>
				<LEGEND_LOCATION><![CDATA[AUTOMATIC]]></LEGEND_LOCATION>
				<LEGEND_ALIGNMENT><![CDATA[LEFT]]></LEGEND_ALIGNMENT>
				<XAXIS_LINE_WIDTH><![CDATA[THINNEST]]></XAXIS_LINE_WIDTH>
				<DATA_MAP_COLUMNS><![CDATA[\,"DT"]]></DATA_MAP_COLUMNS>
				<Y1AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y1AXIS_SCALE_MAXIMUM>
				<XAXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></XAXIS_TITLE_ALIGNMENT>
				<XAXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></XAXIS_TICK_LABEL_ROTATE>
				<Y1AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y1AXIS_LOGARITHMIC_BASE>
				<TYPE><![CDATA[LINE_VERT_ABS]]></TYPE>
				<GRID_WIDTH><![CDATA[THINNER]]></GRID_WIDTH>
				<FOOTNOTE_ALIGNMENT><![CDATA[LEFT]]></FOOTNOTE_ALIGNMENT>
				<XAXIS_TICK_LABEL_SKIP_MODE><![CDATA[AUTOMATIC]]></XAXIS_TICK_LABEL_SKIP_MODE>
				<DATA_MAP_COLNAMES><![CDATA[\,"DT","ELAPSED_TIME_DELTA","SQL_ID"]]></DATA_MAP_COLNAMES>
				<DATA_MAP_SERIES><![CDATA[\,"SQL_ID"]]></DATA_MAP_SERIES>
				<Y2AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y2AXIS_LOGARITHMIC_BASE>
				<STYLE><![CDATA[Default]]></STYLE>
				<TITLE_ALIGNMENT><![CDATA[LEFT]]></TITLE_ALIGNMENT>
				<Y2AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y2AXIS_TICK_LABEL_ROTATE>
				<Y2AXIS_SCALE_MINIMUM><![CDATA[10.0]]></Y2AXIS_SCALE_MINIMUM>
				<Y2AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y2AXIS_LINE_WIDTH>
				<DATA_MAP_VALUES><![CDATA[\,"ELAPSED_TIME_DELTA"]]></DATA_MAP_VALUES>
				<Y1AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y1AXIS_TICK_LABEL_ROTATE>
				<Y2AXIS_SCALE_INCREMENT><![CDATA[20.0]]></Y2AXIS_SCALE_INCREMENT>
				<PLOT_VGRID_WIDTH><![CDATA[THINNER]]></PLOT_VGRID_WIDTH>
				<Y2AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y2AXIS_TITLE_ALIGNMENT>
				<SUBTITLE_ALIGNMENT><![CDATA[LEFT]]></SUBTITLE_ALIGNMENT>
			</CustomValues>
			<query>
				<sql><![CDATA[select :SQL_ID as sql_id, to_char(d.dt, 'dd.mm.yyy hh24') as dt, t.ELAPSED_TIME_DELTA/1000/1000 as ELAPSED_TIME_DELTA
from  (select TRUNC( :ST_DT + ( level - 1 ) /24, 'hh') as dt 
from dual connect by :ST_DT + ( level - 1 ) /24 <= :ED_DT ) d
left join (
  select s.sql_id, trunc(t.BEGIN_INTERVAL_TIME, 'hh') as dttm, round(SUM(s.ELAPSED_TIME_DELTA)) as  ELAPSED_TIME_DELTA
  from DBA_HIST_SQLSTAT s
  join DBA_HIST_SNAPSHOT t on t.snap_id = s.snap_id and t.INSTANCE_NUMBER = s.INSTANCE_NUMBER
  where 
  t.BEGIN_INTERVAL_TIME between :ST_DT and :ED_DT
  --t.BEGIN_INTERVAL_TIME between to_date('12.12.2016', 'dd.mm.yyyy hh24:mi:ss') and to_date('19.12.2016', 'dd.mm.yyyy hh24:mi:ss')
  AND sql_id = :SQL_ID
  GROUP BY s.sql_id, trunc(t.BEGIN_INTERVAL_TIME, 'hh')
) t ON d.dt = t.dttm
order by d.dt]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[awr_wk]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select trunc(t.begin_interval_time, 'IW') as dt, PLAN_HASH_VALUE,  sum( EXECUTIONS_DELTA ) EXECUTIONS_DELTA, 
round( SUM( s.ELAPSED_TIME_DELTA)/nvl(nullif(SUM( EXECUTIONS_DELTA),0),1) /1000/1000,4) as ELAPSED_TIME_DELTA,
round(nullif(sum(ROWS_PROCESSED_DELTA),0)/nvl(nullif(sum(EXECUTIONS_DELTA),0) ,1)) as rws,
round( SUM( DISK_READS_DELTA) /nvl(nullif( SUM( EXECUTIONS_DELTA ) ,0),1)) as drid,
round( SUM( BUFFER_GETS_DELTA) /nvl(nullif(SUM( EXECUTIONS_DELTA),0),1)) as buf_red,
round( sum( s.IOWAIT_DELTA)/nvl(nullif(sum(EXECUTIONS_DELTA),0),1)/1000/1000,3) io_wait,
round( sum( s.CPU_TIME_DELTA)/nvl(nullif(sum(EXECUTIONS_DELTA),0),1)/1000/1000,3) cpu_wait
  from DBA_HIST_SQLSTAT s
  join DBA_HIST_SNAPSHOT t on t.snap_id = s.snap_id and t.INSTANCE_NUMBER = s.INSTANCE_NUMBER
  where 1=1
  and sql_id = :SQL_ID
group by trunc(t.begin_interval_time, 'IW'), PLAN_HASH_VALUE
order by dt desc, PLAN_HASH_VALUE]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[objects]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select object_name, prc from (
select o.object_name, round( (RATIO_TO_REPORT(count(*)) OVER () *100 ), 2) as prc
    FROM   dba_hist_active_sess_history h
    left join dba_objects o on o.object_id = h.CURRENT_OBJ#
    where 
    h.sample_time between :ST_DT and :ED_DT
    and h.sql_id = :SQL_ID AND h.SQL_PLAN_HASH_VALUE = :PLAN_HASH_VALUE
    group by o.object_name
)
where prc >= 0.5
order by prc desc nulls last]]></sql>
			</query>
		</display>
		<display id="" type="" style="Chart" enable="true">
			<name><![CDATA[v$bh]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<PLOT_HGRID_WIDTH><![CDATA[THINNER]]></PLOT_HGRID_WIDTH>
				<Y1AXIS_SCALE_INCREMENT><![CDATA[10.0]]></Y1AXIS_SCALE_INCREMENT>
				<Y2AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y2AXIS_SCALE_MAXIMUM>
				<Y1AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y1AXIS_LINE_WIDTH>
				<Y1AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y1AXIS_TITLE_ALIGNMENT>
				<LEGEND_LOCATION><![CDATA[AUTOMATIC]]></LEGEND_LOCATION>
				<LEGEND_ALIGNMENT><![CDATA[LEFT]]></LEGEND_ALIGNMENT>
				<XAXIS_LINE_WIDTH><![CDATA[THINNEST]]></XAXIS_LINE_WIDTH>
				<Y1AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y1AXIS_SCALE_MAXIMUM>
				<XAXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></XAXIS_TITLE_ALIGNMENT>
				<XAXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></XAXIS_TICK_LABEL_ROTATE>
				<Y1AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y1AXIS_LOGARITHMIC_BASE>
				<TYPE><![CDATA[LINE_VERT_ABS]]></TYPE>
				<GRID_WIDTH><![CDATA[THINNER]]></GRID_WIDTH>
				<FOOTNOTE_ALIGNMENT><![CDATA[LEFT]]></FOOTNOTE_ALIGNMENT>
				<XAXIS_TICK_LABEL_SKIP_MODE><![CDATA[AUTOMATIC]]></XAXIS_TICK_LABEL_SKIP_MODE>
				<Y2AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y2AXIS_LOGARITHMIC_BASE>
				<STYLE><![CDATA[Default]]></STYLE>
				<TITLE_ALIGNMENT><![CDATA[LEFT]]></TITLE_ALIGNMENT>
				<Y2AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y2AXIS_TICK_LABEL_ROTATE>
				<Y2AXIS_SCALE_MINIMUM><![CDATA[10.0]]></Y2AXIS_SCALE_MINIMUM>
				<Y2AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y2AXIS_LINE_WIDTH>
				<Y1AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y1AXIS_TICK_LABEL_ROTATE>
				<Y2AXIS_SCALE_INCREMENT><![CDATA[20.0]]></Y2AXIS_SCALE_INCREMENT>
				<PLOT_VGRID_WIDTH><![CDATA[THINNER]]></PLOT_VGRID_WIDTH>
				<Y2AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y2AXIS_TITLE_ALIGNMENT>
				<SUBTITLE_ALIGNMENT><![CDATA[LEFT]]></SUBTITLE_ALIGNMENT>
			</CustomValues>
			<query>
				<sql><![CDATA[SELECT "STAT$BH".SNAP_DATE, "STAT$BH".OBJ_NAME, avg("STAT$BH".PCT) as pct
FROM DBSNMP."STAT$BH" "STAT$BH"
WHERE ("STAT$BH".PCT>0) and snap_date BETWEEN :ST_DT and :ED_DT
and "STAT$BH".OBJ_NAME IN(
  select /*+ precompute_subquery */ p.object_name
  from SYS.DBA_HIST_SQL_PLAN p
  left join v$sql_plan v on v.sql_id = p.sql_id and v.PLAN_HASH_VALUE = p.PLAN_HASH_VALUE and v.id = p.id
  where p.sql_id = :SQL_ID AND p.PLAN_HASH_VALUE = :PLAN_HASH_VALUE
)
group by "STAT$BH".SNAP_DATE, "STAT$BH".OBJ_NAME
ORDER BY "STAT$BH".SNAP_DATE asc, "STAT$BH".OBJ_NAME asc]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[modules]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * from (
  select h.module, COUNT(*) as cnt
   FROM   dba_hist_active_sess_history h
  where 
  h.sample_time between :ST_DT and :ED_DT
  and h.sql_id = :SQL_ID
  group by h.module
  order by cnt desc nulls last
)
where rownum <= 10]]></sql>
			</query>
		</display>
		<display id="" type="" style="Chart" enable="true">
			<name><![CDATA[graph_exe]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<PLOT_HGRID_WIDTH><![CDATA[THINNER]]></PLOT_HGRID_WIDTH>
				<Y1AXIS_SCALE_INCREMENT><![CDATA[10.0]]></Y1AXIS_SCALE_INCREMENT>
				<Y2AXIS_SCALE_MAXIMUM><![CDATA[80.0]]></Y2AXIS_SCALE_MAXIMUM>
				<Y1AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y1AXIS_LINE_WIDTH>
				<Y1AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y1AXIS_TITLE_ALIGNMENT>
				<LEGEND_LOCATION><![CDATA[AUTOMATIC]]></LEGEND_LOCATION>
				<LEGEND_ALIGNMENT><![CDATA[LEFT]]></LEGEND_ALIGNMENT>
				<XAXIS_LINE_WIDTH><![CDATA[THINNEST]]></XAXIS_LINE_WIDTH>
				<DATA_MAP_COLUMNS><![CDATA[\,"DT"]]></DATA_MAP_COLUMNS>
				<Y1AXIS_SCALE_MAXIMUM><![CDATA[60.0]]></Y1AXIS_SCALE_MAXIMUM>
				<XAXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></XAXIS_TITLE_ALIGNMENT>
				<XAXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></XAXIS_TICK_LABEL_ROTATE>
				<Y1AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y1AXIS_LOGARITHMIC_BASE>
				<TYPE><![CDATA[LINE_VERT_ABS]]></TYPE>
				<GRID_WIDTH><![CDATA[THINNER]]></GRID_WIDTH>
				<PLOT_DATALABELS_BAR_POSITION><![CDATA[ABOVE]]></PLOT_DATALABELS_BAR_POSITION>
				<FOOTNOTE_ALIGNMENT><![CDATA[LEFT]]></FOOTNOTE_ALIGNMENT>
				<XAXIS_TICK_LABEL_SKIP_MODE><![CDATA[AUTOMATIC]]></XAXIS_TICK_LABEL_SKIP_MODE>
				<DATA_MAP_COLNAMES><![CDATA[\,"DT","EXECUTIONS","SQL_ID"]]></DATA_MAP_COLNAMES>
				<DATA_MAP_SERIES><![CDATA[\,"SQL_ID"]]></DATA_MAP_SERIES>
				<Y2AXIS_LOGARITHMIC_BASE><![CDATA[BASE_10]]></Y2AXIS_LOGARITHMIC_BASE>
				<DATA_MAP_COUNT><![CDATA[1]]></DATA_MAP_COUNT>
				<STYLE><![CDATA[Default]]></STYLE>
				<TITLE_ALIGNMENT><![CDATA[LEFT]]></TITLE_ALIGNMENT>
				<Y2AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y2AXIS_TICK_LABEL_ROTATE>
				<Y2AXIS_SCALE_MINIMUM><![CDATA[10.0]]></Y2AXIS_SCALE_MINIMUM>
				<Y2AXIS_LINE_WIDTH><![CDATA[THINNEST]]></Y2AXIS_LINE_WIDTH>
				<DATA_MAP_VALUES><![CDATA[\,"EXECUTIONS"]]></DATA_MAP_VALUES>
				<Y1AXIS_TICK_LABEL_ROTATE><![CDATA[HORIZONTAL]]></Y1AXIS_TICK_LABEL_ROTATE>
				<Y2AXIS_SCALE_INCREMENT><![CDATA[20.0]]></Y2AXIS_SCALE_INCREMENT>
				<PLOT_VGRID_WIDTH><![CDATA[THINNER]]></PLOT_VGRID_WIDTH>
				<Y2AXIS_TITLE_ALIGNMENT><![CDATA[CENTER]]></Y2AXIS_TITLE_ALIGNMENT>
				<SUBTITLE_ALIGNMENT><![CDATA[LEFT]]></SUBTITLE_ALIGNMENT>
			</CustomValues>
			<query>
				<sql><![CDATA[select :SQL_ID as sql_id, to_char(d.dt, 'dd.mm.yyy hh24') as dt, t.EXECUTIONS_DELTA as executions
from  (select TRUNC( :ST_DT + ( level - 1 ) /24, 'hh') as dt 
from dual connect by :ST_DT + ( level - 1 ) /24 <= :ED_DT ) d
left join (
  select s.sql_id, trunc(t.BEGIN_INTERVAL_TIME, 'hh') as dttm, round(SUM(s.EXECUTIONS_DELTA)) as  EXECUTIONS_DELTA
  from DBA_HIST_SQLSTAT s
  join DBA_HIST_SNAPSHOT t on t.snap_id = s.snap_id and t.INSTANCE_NUMBER = s.INSTANCE_NUMBER
  where 
  t.BEGIN_INTERVAL_TIME between :ST_DT and :ED_DT
  --t.BEGIN_INTERVAL_TIME between to_date('12.12.2016', 'dd.mm.yyyy hh24:mi:ss') and to_date('19.12.2016', 'dd.mm.yyyy hh24:mi:ss')
  AND sql_id = :SQL_ID
  GROUP BY s.sql_id, trunc(t.BEGIN_INTERVAL_TIME, 'hh')
) t ON d.dt = t.dttm
order by d.dt]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[blocking]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select h.event, h.client_id, h.BLOCKING_SESSION, h.BLOCKING_SESSION_SERIAL# , H.CURRENT_BLOCK#, H.CURRENT_OBJ#, 
H.CURRENT_ROW#,o.owner || '.' || o.object_name as obj_name, COUNT(*) as cnt , COUNT(DISTINCT H.SESSION_ID) as sid_cnt,
'select * from '||o.owner || '.' || o.object_name||' where SYS.dbms_rowid.rowid_block_number(rowid) = '||H.CURRENT_BLOCK#||' and SYS.dbms_rowid.rowid_row_number(rowid) = ' || H.CURRENT_ROW# as sql_text
from dba_hist_active_sess_history h 
left join dba_objects o on o.object_id = H.CURRENT_OBJ#
where h.sample_time between :ST_DT and :ED_DT
and sql_id = :SQL_ID
AND h.BLOCKING_SESSION IS NOT NULL
GROUP BY h.event, h.BLOCKING_SESSION, h.BLOCKING_SESSION_SERIAL# , H.CURRENT_BLOCK#, H.CURRENT_OBJ#, H.CURRENT_ROW#,o.owner, o.object_name, h.client_id
order by cnt desc]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[plan_real_tbs]]></name>
			<description><![CDATA[for undo scan detect]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[with t as (
  select /*+ materialize */ SQL_PLAN_LINE_ID, LISTAGG(TABLESPACE_NAME || ' ('||prc||'%)', '; ') WITHIN GROUP (ORDER BY prc desc) TABLESPACE_NAME, SUM(prc) as prc
  from (
    select nvl( SQL_PLAN_LINE_ID, 0) SQL_PLAN_LINE_ID, f.TABLESPACE_NAME, round( (RATIO_TO_REPORT(count(*)) OVER () *100 ), 2) as prc,
      round( (RATIO_TO_REPORT(count(*)) OVER (partition by nvl( SQL_PLAN_LINE_ID, 0)) *100 ), 2) as prc_per_line
    FROM   dba_hist_active_sess_history h
    left join DBA_DATA_FILES f on f.FILE_ID = h.CURRENT_FILE# 
    where 
    h.sample_time between :ST_DT and :ED_DT
    and h.sql_id = :SQL_ID AND h.SQL_PLAN_HASH_VALUE = :PLAN_HASH_VALUE
    group by nvl( SQL_PLAN_LINE_ID, 0), f.TABLESPACE_NAME
  )
  where prc_per_line > 1
  GROUP BY SQL_PLAN_LINE_ID
)
select DISTINCT p.id, RPAD(' ', p."DEPTH", ' ') || P.OPERATION || ' ' || p.OPTIONS  as OPERATION, p.object_name, 
  t.TABLESPACE_NAME, t.prc
from SYS.DBA_HIST_SQL_PLAN p
left join t on T.SQL_PLAN_LINE_ID = p.id 
where p.sql_id = :SQL_ID AND p.PLAN_HASH_VALUE = :PLAN_HASH_VALUE
order by p.id]]></sql>
			</query>
		</display>
		<display id="" type="" style="Script" enable="true">
			<name><![CDATA[text_bnd]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
			</CustomValues>
			<query>
				<sql><![CDATA[set serveroutput on;
declare 
v_ret clob;
v_add varchar(4);
begin
    dbms_output.enable(10000);
    begin
        select sql_text||' ' into v_ret from dba_hist_sqltext t where sql_id = :SQL_ID and rownum < 2;
    exception when others then
        select sql_fulltext||' ' into v_ret from v$sql t where sql_id = :SQL_ID and rownum < 2;
    end;
    for i in(select sysdate last_captured, NAME, VALUE_STRING,DATATYPE_STRING from v$sql_bind_capture where sql_id = :SQL_ID union all
    select  last_captured, NAME, VALUE_STRING,DATATYPE_STRING from dba_hist_sqlbind where sql_id = :SQL_ID and last_captured <= sysdate 
    order by last_captured desc, VALUE_STRING nulls last) loop
        v_add := '''';
        if i.DATATYPE_STRING IN( 'NUMBER', 'INTEGER') then
            v_add := '';
        end if;
        v_ret := replace(v_ret, i.name||' ', v_add||i.VALUE_STRING||v_add||' ');
        v_ret := replace(v_ret, i.name||',', v_add||i.VALUE_STRING||v_add||',');
        v_ret := replace(v_ret, i.name||')', v_add||i.VALUE_STRING||v_add||')');
        
        IF INSTR(v_ret, ':') < 1 THEN
            exit;
        END IF;
    end loop;
    DBMS_OUTPUT.PUT_LINE(v_ret);
end;]]></sql>
			</query>
		</display>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[ash_hist]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select  h.client_id, h.module, sql_exec_start, max(sample_time) as end_dt, h.sql_id, h.SQL_PLAN_HASH_VALUE,
round((cast(max(sample_time) as date)- sql_exec_start )*3600*24,3) as secs,
count(*) cnt, round(SUM (delta_read_io_bytes)/1024/1024/1024 ) as gb, round(sum(h.delta_read_io_requests)/1000) as kreg, round(avg( trunc(px_flags/2097152) )) as px
FROM dba_hist_active_sess_history h 
where 
h.snap_id >= ( select /*+ precompute_subquery */ MIN(snap_id) from DBA_HIST_SNAPSHOT  where END_INTERVAL_TIME >= trunc(sysdate)-14 )
and h.sample_time >= trunc(sysdate)-14
and h.sql_id = :SQL_ID
group by h.sql_id, h.SQL_PLAN_HASH_VALUE, sql_exec_start, module, h.client_id
order by sql_exec_start desc nulls last]]></sql>
			</query>
		</display>
<item  reload="false"  reloadparent="false" removeFromParent="false" className="oracle.dbtools.raptor.report.addin.DrillReportAction" classArgs="74c746aa-0157-1000-8029-0a02322027a3" toolbar="false" ><title>plans</title><sql><![CDATA[]]></sql><script language="js"><![CDATA[]]></script><help></help></item>	</display>
	<display id="5c290c14-015b-1000-8001-0a02596f7994" type="" style="Table" enable="true">
		<name><![CDATA[Table plans]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<TYPE><![CDATA[horizontal]]></TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[with stat$tst as (
  select /*+parallel(8) */ s.sql_id, s.PLAN_HASH_VALUE, 
  sum( EXECUTIONS_DELTA ) EXECUTIONS_DELTA, 
  round( SUM( s.ELAPSED_TIME_DELTA)/nvl(nullif(SUM( EXECUTIONS_DELTA),0),1) /1000/1000,3) as ELAPSED_TIME_DELTA,
   ( select round( sum(ELAPSED_TIME)/NVL(NULLIF(sum(executions),0),1) / 1000 /1000 ,4) as 
      from v$sql v where v.sql_id = s.sql_id /*and v.PLAN_HASH_VALUE = s.PLAN_HASH_VALUE*/ ) as v$sec,
  round(nullif(sum(ROWS_PROCESSED_DELTA),0)/nvl(nullif(sum(EXECUTIONS_DELTA),0) ,1)) as rws,
  round( SUM( DISK_READS_DELTA) /nvl(nullif( SUM( EXECUTIONS_DELTA ) ,0),1)) as drid,
  round( SUM( BUFFER_GETS_DELTA) /nvl(nullif(SUM( EXECUTIONS_DELTA),0),1)) as buf_red,
  SUM( DISK_READS_DELTA) as drid_ttl,
  SUM( BUFFER_GETS_DELTA) as buf_red_ttl,
  min(BEGIN_INTERVAL_TIME) as st_dt, max(BEGIN_INTERVAL_TIME) as ed_dt,
  max(trim(DBMS_LOB.SUBSTR (tx.sql_text,1000)))  sql_text
  from DBA_HIST_SQLSTAT s
  join DBA_HIST_SNAPSHOT t on t.snap_id = s.snap_id and t.INSTANCE_NUMBER = s.INSTANCE_NUMBER
  join dba_hist_sqltext tx on tx.sql_id = s.sql_id-- and tx.PLAN_HASH_VALUE = s.PLAN_HASH_VALUE
  where 
  upper(tx.sql_text) like :tbl and
  t.BEGIN_INTERVAL_TIME between to_date(:f, 'dd.mm.yyyy hh24:mi:ss') and to_date(:t, 'dd.mm.yyyy hh24:mi:ss')
  GROUP BY s.sql_id, s.PLAN_HASH_VALUE
)
select * from (
select t.*, count(distinct plan_hash_value) over(partition by sql_id) as cnt from stat$tst t 
)
order by cnt desc, v$sec, sql_id, ed_dt desc]]></sql>
			<binds>
				<bind id="tbl">
					<prompt><![CDATA[tbl]]></prompt>
					<tooltip><![CDATA[tbl]]></tooltip>
					<value><![CDATA[%ZEINVOICE_DOC%]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
				<bind id="f">
					<prompt><![CDATA[f]]></prompt>
					<tooltip><![CDATA[f]]></tooltip>
					<value><![CDATA[01.05.2017]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
				<bind id="t">
					<prompt><![CDATA[t]]></prompt>
					<tooltip><![CDATA[t]]></tooltip>
					<value><![CDATA[01.06.2017]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
			</binds>
		</query>
	</display>
	<display id="74f333dc-015e-1000-8001-0a02596fb786" type="" style="Table" enable="true">
		<name><![CDATA[obj top read]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[]]></drillclass>
		<CustomValues>
			<TYPE><![CDATA[horizontal]]></TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[select h.sql_id, h.SQL_PLAN_HASH_VALUE, sum(H.DELTA_READ_IO_BYTES) as DELTA_READ_IO_BYTES, 
ROUND(SUM( DELTA_READ_IO_BYTES) / SUM(SUM( DELTA_READ_IO_BYTES)) OVER() * 100,2) as read_prc, max(DBMS_LOB.SUBSTR (t.sql_text,2000)) as SQL_TEXT
 FROM   dba_hist_active_sess_history h
 join SYS.DBA_HIST_SQL_PLAN p on h.sql_id = p.sql_id and h.SQL_PLAN_HASH_VALUE = p.PLAN_HASH_VALUE and p.id = h.SQL_PLAN_LINE_ID
 left join dba_hist_sqltext t on t.sql_id = h.sql_id
      where 
      h.sample_time between to_date(:f, 'dd.mm.yyyy hh24:mi:ss') and to_date(:t, 'dd.mm.yyyy hh24:mi:ss')
      and p.object# in (select /*+ PRECOMPUTE_SUBQUERY */object_id from dba_objects where object_name = :TBL)
      and h.sql_id is not null
group by h.sql_id, h.SQL_PLAN_HASH_VALUE
order by DELTA_READ_IO_BYTES desc nulls last]]></sql>
			<binds>
				<bind id="f">
					<prompt><![CDATA[f]]></prompt>
					<tooltip><![CDATA[f]]></tooltip>
					<value><![CDATA[17.07.2023]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
				<bind id="t">
					<prompt><![CDATA[t]]></prompt>
					<tooltip><![CDATA[t]]></tooltip>
					<value><![CDATA[07.03.2024]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
				<bind id="TBL">
					<prompt><![CDATA[TBL]]></prompt>
					<tooltip><![CDATA[TBL]]></tooltip>
					<value><![CDATA[MARC]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
			</binds>
		</query>
		<display id="" type="" style="Table" enable="true">
			<name><![CDATA[plan]]></name>
			<description><![CDATA[]]></description>
			<tooltip><![CDATA[]]></tooltip>
			<drillclass><![CDATA[]]></drillclass>
			<CustomValues>
				<TYPE><![CDATA[horizontal]]></TYPE>
			</CustomValues>
			<query>
				<sql><![CDATA[select * from table(DBMS_XPLAN.DISPLAY_AWR(:SQL_ID, :SQL_PLAN_HASH_VALUE, null, 'basic +outline +peeked_binds') )
union all
SELECT * FROM TABLE(dbms_xplan.display_cursor(:SQL_ID,format => 'ADVANCED'))]]></sql>
			</query>
		</display>
	</display>
</folder>
</displays>